swagger: '2.0'
info:
  title: Catalog APIs
  version: "1"
  description: |-
    ### Catalog

    The Catalog API manages products, brands and categories for a store. To learn more about the Catalog resources see [Catalog Products](/api-docs/catalog/products/products-overview) and [Categories](/api-docs/catalog/categories/categories-overview).
  termsOfService: ''
  license:
    name: ''
host: api.bigcommerce.com
basePath: '/stores/{store_hash}/v3'
tags:
  - name: Catalog
  - name: Products
  - name: Product Metafields
  - name: Product Bulk Pricing Rules
  - name: Product Custom Fields
  - name: Product Images
  - name: Product Variant Options
  - name: Product Variant Option Values
  - name: Product Variants
  - name: Product Variants Metafields
  - name: Product Modifiers
  - name: Product Modifier Values
  - name: Product Modifier Images
  - name: Product Complex Rules
  - name: Product Reviews
  - name: Product Videos
  - name: Brands
  - name: Brand Metafields
  - name: Brand Images
  - name: Category
  - name: Category Metafields
  - name: Category Images
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  /catalog/products:
    get:
      description: Returns a list of *Products*. Optional filter parameters can be passed in.
      operationId: getProducts
      parameters:
        - $ref: '#/parameters/FilterIdParam'
        - $ref: '#/parameters/FilterNameParam'
        - $ref: '#/parameters/FilterSkuParam'
        - $ref: '#/parameters/FilterUpcParam'
        - $ref: '#/parameters/FilterPriceParam'
        - $ref: '#/parameters/FilterWeightParam'
        - $ref: '#/parameters/FilterConditionParam'
        - $ref: '#/parameters/FilterBrandIdParam'
        - $ref: '#/parameters/FilterDateModifiedParam'
        - $ref: '#/parameters/FilterDateLastImportedParam'
        - $ref: '#/parameters/FilterIsVisibleParam'
        - $ref: '#/parameters/FilterIsFeaturedParam'
        - $ref: '#/parameters/FilterIsFreeShippingParam'
        - $ref: '#/parameters/FilterInventoryLevelParam'
        - $ref: '#/parameters/FilterInventoryLowParam'
        - $ref: '#/parameters/FilterOutOfStockParam'
        - $ref: '#/parameters/FilterTotalSoldParam'
        - $ref: '#/parameters/ProductFilterTypeParam'
        - $ref: '#/parameters/FilterCategoriesParam'
        - $ref: '#/parameters/ProductFilterKeywordParam'
        - $ref: '#/parameters/ProductFilterKeywordContextParam'
        - $ref: '#/parameters/FilterStatusParam'
        - $ref: '#/parameters/FilterIncludeParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/FilterAvailabilityParam'
        - $ref: '#/parameters/FilterPriceListIdParam'
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/DirectionParam'
        - $ref: '#/parameters/ProductSortParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductCollectionResponse'
      summary: Get All Products
      tags:
        - Products
        - Catalog
    post:
      description: |-
        Creates a *Product*. Only one product can be created at a time.

        **Required Fields:**
        - name
        - type
        - weight
        - categories
        - price

        **Read-Only Fields**
        - id
        - date_created
        - date_modified
        - calculated_price
        - base_variant_id
      operationId: createProduct
      parameters:
        - name: product
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductPost'
          x-examples:
            Simple Product: |-
              {
                "name": "BigCommerce Coffee Mug",
                "price": "10.00",
                "categories": [
                  23,
                  21
                ],
                "weight": 4,
                "type": "physical"
              }
            Creating a Product with Variants: |-
              {
                  "name": "BigCommerce Coffee Mug",
                  "price": "10.00",
                  "categories":[
                          23,21
                      ],
                      
                  "weight": 4,
                  "type": "physical",
                  "variants":[
                      {
                          "sku": "SKU-BLU",
                          "option_values":[
                                  {
                                      "option_display_name": "Mug Color",
                                      "label": "Blue"
                                  }
                              ]
                      },
                      {
                          "sku": "SKU-GRAY",
                          "option_values":[
                                  {
                                      "option_display_name": "Mug Color",
                                      "label": "Gray"
                                  }
                              ]
                      }
                  ]
              }
            application/json:
              name: deser
              type: digital
              sku: nulla cill
              description: velit ea laborum
              weight: 6653716699.214403
              width: 3309999404.9099708
              depth: 4134454397.1852517
              height: 5598633863.808846
              price: 49476158.100480735
              cost_price: 50352345.96818179
              retail_price: 36286048.34741529
              sale_price: 11052123.33915786
              tax_class_id: 306504518
              product_tax_code: a
              categories:
                - 5956409
                - -946051
              brand_id: 996103720
              inventory_level: 632406493
              inventory_warning_level: 550419826
              inventory_tracking: none
              fixed_cost_shipping_price: 58177662.107555576
              is_free_shipping: true
              is_visible: true
              is_featured: true
              related_products:
                - 91656741
                - -2410364
                - 73795790
              warranty: ''
              bin_picking_number: sint amet
              layout_file: nulla do
              upc: cons
              search_keywords: ut sit
              availability: disabled
              availability_description: aliqu
              gift_wrapping_options_type: any
              gift_wrapping_options_list:
                - 25901911
                - -11127634
              sort_order: -1555536918
              condition: Refurbished
              is_condition_shown: true
              order_quantity_minimum: 240355460
              order_quantity_maximum: 178262377
              page_title: eu magn
              meta_keywords:
                - aute sed laboris
                - sint proident
                - Duis
              meta_description: Excepteu
              view_count: 311660434
              preorder_release_date: '1978-02-08T16:31:47.697Z'
              preorder_message: 'eu veniam '
              is_preorder_only: true
              is_price_hidden: true
              price_hidden_label: elit mo
              custom_url:
                url: amet dolore
                is_customized: true
              open_graph_type: drink
              open_graph_title: sed dolore laboris
              open_graph_description: qui aute occaecat irure Excepteur
              open_graph_use_meta_description: false
              open_graph_use_product_name: true
              open_graph_use_image: true
              brand_name: consectetur ullamco
              custom_fields:
                - name: incidid
                  value: 'amet '
                - name: laboris u
                  value: sed occae
                - name: d
                  value: in sin
                - name: quis
                  value: non nisi d
              bulk_pricing_rules:
                - quantity_min: 36386399
                  quantity_max: 16049178
                  type: percent
                  amount: 45682957.00946889
                - quantity_min: 30096932
                  quantity_max: 18129770
                  type: fixed
                  amount: 81926328.72978693
                - quantity_min: 26209769
                  quantity_max: 20727080
                  type: percent
                  amount: 98517183.05615105
                - quantity_min: 23518238
                  quantity_max: 69792968
                  type: percent
                  amount: 77246599.44982533
                - quantity_min: 68783738
                  quantity_max: 55517681
                  type: fixed
                  amount: 131961.92377118443
              variants:
                - cost_price: 43411253.95607388
                  price: 33995022.931045726
                  sale_price: 68667606.302963
                  retail_price: 9552682.621407116
                  weight: 35541646.32589165
                  width: 41896181.62487447
                  height: 46658474.628709756
                  depth: 15671295.040809019
                  is_free_shipping: true
                  fixed_cost_shipping_price: 84506228.2754877
                  purchasing_disabled: true
                  purchasing_disabled_message: 'aute '
                  image_url: cillum in sed
                  upc: amet culpa
                  inventory_level: -95050659
                  inventory_warning_level: -94168530
                  bin_picking_number: paria
                  product_id: 48998310
                  sku: occ
                  option_values:
                    - option_display_name: des
                      label: eni
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Accept'
      responses:
        '200':
          $ref: '#/responses/ProductResponse'
        '409':
          description: |
            `Product` was in conflict with another product. This is the result of duplicate unique values, such as name or SKU; a missing or invalid `category_id`, `brand_id`, or `tax_class id`; or a conflicting `bulk_pricing_rule`.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            `Product` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Product
      tags:
        - Products
        - Catalog
    delete:
      description: |-
        By default, it deletes all *Product* objects. A filter should be added to avoid deleting all *Product* objects in a store.

        **Example**:
        To delete products with the id's of 1,2 and 3, use `DELETE /v3/catalog/products?id:in=1,2,3`.
      operationId: deleteProducts
      parameters:
        - $ref: '#/parameters/FilterNameParam'
        - $ref: '#/parameters/FilterSkuParam'
        - $ref: '#/parameters/FilterPriceParam'
        - $ref: '#/parameters/FilterWeightParam'
        - $ref: '#/parameters/FilterConditionParam'
        - $ref: '#/parameters/FilterBrandIdParam'
        - $ref: '#/parameters/FilterDateModifiedParam'
        - $ref: '#/parameters/FilterDateLastImportedParam'
        - $ref: '#/parameters/FilterIsVisibleParam'
        - $ref: '#/parameters/FilterIsFeaturedParam'
        - $ref: '#/parameters/FilterInventoryLevelParam'
        - $ref: '#/parameters/FilterTotalSoldParam'
        - $ref: '#/parameters/ProductFilterTypeParam'
        - $ref: '#/parameters/FilterCategoriesParam'
        - $ref: '#/parameters/ProductFilterKeywordParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '204':
          description: ''
      summary: Delete Products
      tags:
        - Products
        - Catalog
  '/catalog/products/{product_id}':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
    get:
      description: Returns a single *Product*. Optional parameters can be passed in.
      operationId: getProductById
      parameters:
        - $ref: '#/parameters/FilterIncludeParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/FilterPriceListIdParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Product
      tags:
        - Products
        - Catalog
    put:
      description: |
        Updates a *Product*.

        **Read-Only Fields**
        - id
        - date_created
        - date_modified
        - calculated_price
        - base_variant_id
      operationId: updateProduct
      parameters:
        - name: product
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductPut'
          x-examples:
            application/json:
              name: Fog Linen Chambray Towel - Beige Stripe
              type: physical
              sku: SLCTBS
              description: '<p>The perfect beach towel: thin, lightweight and highly absorbent. Crafted by Fog Linen in Japan using soft Lithuanian linen, each towel rolls up for compact stowaway. Dry off after a refreshing dip in the ocean and stretch out on it for a sun bath. The thinness ensures a quick dry so you can have it rolled back up in your bag without soaking your belongings.</p>\r\n<p>Measures 75 x 145 cm/29.5 x 57 in</p>\r\n<p>100% Linen</p>'
              weight: 1
              width: 6
              depth: 2
              height: 4
              price: 49.99
              cost_price: 12.99
              retail_price: 32.99
              tax_class_id: 0
              product_tax_code: '3451'
              categories:
                - 1
                - 2
              brand_id: 5
              inventory_level: 10
              inventory_warning_level: 10
              inventory_tracking: none
              fixed_cost_shipping_price: 8
              is_free_shipping: false
              is_visible: true
              is_featured: true
              related_products:
                - -1
              bin_picking_number: 56WB
              layout_file: product.html
              upc: '1234567890'
              search_keywords: 'towel, bath, kitchen'
              availability: available
              gift_wrapping_options_type: any
              gift_wrapping_options_list:
                - 1
                - 2
                - 3
              sort_order: 4
              condition: New
              is_condition_shown: true
              order_quantity_minimum: 5
              order_quantity_maximum: 50
              meta_keywords: []
              view_count: 146
              preorder_release_date: 'null'
              is_preorder_only: false
              is_price_hidden: false
              custom_url:
                url: /this-is-a-custom-url/
                is_customized: true
              open_graph_type: product
              id: 113
              custom_fields:
                - name: Release year
                  value: '1987'
                  id: 1
              bulk_pricing_rules:
                - quantity_min: 10
                  quantity_max: 50
                  type: price
                  amount: 10
                  id: 3
              variants:
                - id: 12
                  cost_price: 3
                  price: 50.99
                  sale_price: 45
                  retail_price: 50.99
                  weight: 1
                  width: 4
                  height: 14.6
                  depth: 22
                  is_free_shipping: true
                  purchasing_disabled: true
                  purchasing_disabled_message: This item not available at this time.
                  inventory_level: 100
                  inventory_warning_level: 10
                  product_id: 87
                  sku: S-ORAN-1
                  brand_name: Common Good
                  brand_id: 1
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
        '409':
          description: |
            `Product` was in conflict with another product. This is caused by: duplicate unique values, such as name or SKU; a missing category, brand, or tax_class with which the product is being associated; or a conflicting bulk pricing rule.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            `Product` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a Product
      tags:
        - Products
        - Catalog
    delete:
      description: Deletes a *Product*.
      operationId: deleteProductById
      responses:
        '204':
          description: ''
      summary: Delete a Product
      tags:
        - Products
        - Catalog
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
  '/catalog/products/{product_id}/images':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
    get:
      description: Returns a list of *Product Images*. Optional parameters can be passed in.
      operationId: getProductImages
      parameters:
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductImageCollectionResponse'
        '204':
          description: |
            There are not any images on this product.
        '404':
          description: |
            The product ID does not exist.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get All Product Images
      tags:
        - Product Images
        - Catalog
    post:
      description: |-
        Creates a *Product Image*. 

         **Required Fields**
        - image_file  
        or
        - image_url

        Only one image at a time can be created.
      operationId: createProductImage
      parameters:
        - name: productImage
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductImagePost'
          x-examples:
            application/json:
              is_thumbnail: true
              sort_order: 1
              description: Top View
              image_url: 'https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg'
            multipart/form-data: |-
              curl -X POST \
                https://api.bigcommerce.com/stores/id30h7ohwf/v3/catalog/products/158/images \
                -H 'Accept: application/json' \
                -H 'Cache-Control: no-cache' \
                -H 'Content-Type: application/json' \
                -H 'X-Auth-Client: {X-Auth-Client:}' \
                -H 'X-Auth-Token: {X-Auth-Token:}' \
                -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW' \
                -F image_file=@/Users/user.name/Documents/docs_images/product-image.png
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductImageResponse'
        '404':
          description: |
            The product ID does not exist.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Create a Product Image
      consumes:
        - multipart/form-data
        - application/json
      tags:
        - Product Images
        - Catalog
  '/catalog/products/{product_id}/images/{image_id}':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/ImageIdParam'
    get:
      description: Returns a single *Product Image*. Optional parameters can be passed in.
      operationId: getProductImageById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductImageResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Product Image
      tags:
        - Product Images
        - Catalog
    put:
      description: |-
        Updates a *Product Image*.

         **Required Fields**
        - image_file  
        or
        - image_url

        When using file upload, other image file params can be updated as well using key:value pairs. 
      operationId: updateProductImage
      parameters:
        - name: productImage
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductImagePut'
          x-examples:
            application/json:
              is_thumbnail: true
              sort_order: 1
              description: Yellow Large Bath Towel
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductImageResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a Product Image
      tags:
        - Product Images
        - Catalog
      consumes:
        - application/json
        - multipart/form-data
    delete:
      description: Deletes a *Product Image*.
      operationId: deleteProductImage
      responses:
        '204':
          description: ''
      summary: Delete a Product Image
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Product Images
        - Catalog
  '/catalog/products/{product_id}/videos':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
    get:
      description: Returns a list of *Product Videos*. Optional parameters can be passed in
      operationId: getProductVideos
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductVideoCollectionResponse'
      summary: Get All Product Videos
      tags:
        - Product Videos
        - Catalog
    post:
      description: |-
        Creates a *Product Video*.

        **Required Fields**
        * video_id - Example: https://www.youtube.com/watch?v=`R12345677`

        **Read-Only Fields**
        * id

        Publicly accessible URLs are valid parameters.
        Videos must be loaded through YouTube at this time. 
      operationId: createProductVideo
      parameters:
        - name: productVideo
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductVideoPost'
          x-examples:
            application/json:
              title: Your Video
              description: Company Values
              sort_order: 1
              type: youtube
              video_id: 123345AA
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductVideoResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Create a Product Video
      tags:
        - Product Videos
        - Catalog
  '/catalog/products/{product_id}/videos/{video_id}':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/VideoIdParam'
    get:
      description: Returns a single *Product Video*. Optional parameters can be passed in.
      operationId: getProductVideoById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductVideoResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Product Video
      tags:
        - Product Videos
        - Catalog
    put:
      description: |-
        Updates a *Product Video.

        **Required Fields**
        * none

        **Read-Only Fields**
        * id
      operationId: updateProductVideo
      parameters:
        - name: productVideo
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductVideoPut'
          x-examples:
            application/json:
              title: 'est '
              description: exercitation labore consectetur
              sort_order: 1272745782
              type: youtube
              id: -39983286
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductVideoResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a Product Video
      tags:
        - Product Videos
        - Catalog
    delete:
      operationId: deleteProductVideo
      responses:
        '204':
          description: ''
      summary: Delete a Product Video
      description: Deletes a *Product Video*.
      tags:
        - Product Videos
        - Catalog
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
  '/catalog/products/{product_id}/variants':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
    get:
      description: Returns a list of product *Variants*. Optional parameters can be passed in.
      operationId: getVariantsByProductId
      parameters:
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/VariantCollectionResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      tags:
        - Product Variants
        - Catalog
      summary: Get All Product Variants
    post:
      description: |-
        Creates a *Product Variant*. 

        **Required Fields**
        * sku
        * option_values

        **Read-Only Fields**
        * id

        Variants need to be created one at a time using this endpoint. To use a variant array and create products and variants in the same call use the [Create Products](/api-reference/catalog/catalog-api/products/createproduct) during the initial product creation.
      operationId: createVariant
      parameters:
        - name: Variant
          in: body
          required: true
          schema:
            $ref: '#/definitions/VariantPost'
          x-examples:
            application/json:
              cost_price: 3
              price: 12.99
              retail_price: 15.99
              weight: 1
              width: 4
              height: 14.6
              depth: 22
              is_free_shipping: true
              purchasing_disabled: true
              purchasing_disabled_message: This item not available at this time.
              product_id: 134
              sku: SMALL-BLUE
              option_values:
                - id: 163
                  option_id: 193
                - id: 166
                  option_id: 194
      responses:
        '200':
          $ref: '#/responses/VariantResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      tags:
        - Product Variants
        - Catalog
      summary: Create a Product Variant
  '/catalog/products/{product_id}/variants/{variant_id}':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/VariantIdParam'
    get:
      description: Returns a single product *Variant*. Optional parameters can be passed in.
      operationId: getVariantById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/VariantResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Product Variant
      tags:
        - Product Variants
        - Catalog
    put:
      description: |-
        Updates a product *Variant*.

        **Required Fields**
        * none

        **Read-Only Fields**
        * id
      operationId: updateVariant
      parameters:
        - name: Variant
          in: body
          required: true
          schema:
            $ref: '#/definitions/VariantPut'
          x-examples:
            application/json:
              cost_price: 3
              price: 50.99
              sale_price: 45
              retail_price: 50.99
              weight: 1
              width: 4
              height: 14.6
              depth: 22
              is_free_shipping: true
              purchasing_disabled: true
              purchasing_disabled_message: This item not available at this time.
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/VariantResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a Product Variant
      tags:
        - Product Variants
        - Catalog
    delete:
      description: Deletes a product *Variant*.
      operationId: deleteVariantById
      responses:
        '204':
          description: ''
      summary: Delete a Product Variant
      tags:
        - Product Variants
        - Catalog
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
  '/catalog/products/{product_id}/variants/{variant_id}/metafields':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/VariantIdParam'
    get:
      description: Returns a list of product variant *Metafields*. Optional parameters can be passed in.
      operationId: getVariantMetafieldsByProductIdAndVariantId
      parameters:
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/MetafieldKeyParam'
        - $ref: '#/parameters/MetafieldNamespaceParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldCollectionResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get Product Variant Metafields
      tags:
        - Product Variants Metafields
        - Catalog
    post:
      description: |-
        Creates a product variant *Metafield*.

        **Required Fields:**
        * permission_set
        * namespace
        * key
        * value

        **Read-Only Fields**
        * id
      operationId: createVariantMetafield
      parameters:
        - name: Metafield
          in: body
          required: true
          schema:
            $ref: '#/definitions/MetafieldPost'
          x-examples:
            application/json:
              permission_set: app_only
              namespace: App Namespace
              key: location_id
              value: 'Shelf 3, Bin 5'
              description: Where products are locationed
              resource_type: variant
              resource_id: 111
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldResponse'
        '409':
          description: |
            The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique-key combinations of the app's client id, namespace, key, resource_type, and resource_id.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Product Variant Metafield
      tags:
        - Product Variants Metafields
        - Catalog
  '/catalog/products/{product_id}/variants/{variant_id}/metafields/{metafield_id}':
    parameters:
      - $ref: '#/parameters/MetafieldIdParam'
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/VariantIdParam'
    get:
      description: Returns a single product variant *Metafield*. Optional parameters can be passed in.
      operationId: getVariantMetafieldByProductIdAndVariantId
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get Product Variant Metafields
      tags:
        - Product Variants Metafields
        - Catalog
    put:
      description: |-
        Updates a product variant *Metafield*.

        **Required Fields:**
        * none

        **Read-Only Fields**
        * id
      operationId: updateVariantMetafield
      parameters:
        - name: Metafield
          in: body
          required: true
          schema:
            $ref: '#/definitions/MetafieldPost'
          x-examples:
            application/json:
              permission_set: app_only
              namespace: Warehouse SKUS
              key: Location
              value: 4H
              description: location in the warehouse
              resource_type: variant
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update Product Variant Metafields
      tags:
        - Product Variants Metafields
        - Catalog
    delete:
      description: Deletes a product variant *Metafield*.
      operationId: deleteVariantMetafieldById
      responses:
        '204':
          description: ''
      summary: Delete a Variant Metafield
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Product Variants Metafields
        - Catalog
  '/catalog/products/{product_id}/variants/{variant_id}/image':
    post:
      operationId: createVariantImage
      parameters:
        - $ref: '#/parameters/ProductIdParam'
        - $ref: '#/parameters/VariantIdParam'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ResourceImage'
          x-examples:
            application/json:
              image_file: 'https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg'
            multipart/form-data: |-
              curl -X PUT \
                https://api.bigcommerce.com/stores/id30h7ohwf/v3/catalog/products/{product_id}/variants/{variant_id}/image \
                -H 'Accept: application/json' \
                -H 'Cache-Control: no-cache' \
                -H 'Content-Type: application/json' \
                -H 'X-Auth-Client: {X-Auth-Client}' \
                -H 'X-Auth-Token: {X-Auth_Token}' \
                -H 'content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW' \
                -F image_file=@/Users/user.name/Documents/docs_images/product-image.png
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ImageResponse'
          examples:
            application/json:
              data:
                image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/product_images/attribute_rule_images/85_source_1536863430.png'
              meta: {}
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
        '422':
          description: |
            Image was not valid. This is the result of a missing `image_file` field or of an incorrect file type. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Variant Image
      description: |-
        Creates a *Variant Image*.

        The image will show on the storefront when the value is selected.

         **Required Fields**
        - image_file: Form posts are the only accepted upload option.
      tags:
        - Product Variants
        - Catalog
      consumes:
        - application/json
  '/catalog/products/{product_id}/options':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
    get:
      description: 'Returns a list of product *Variant Options*. Optional parameters can be passed in. '
      operationId: getOptions
      parameters:
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
      responses:
        '200':
          $ref: '#/responses/OptionCollectionResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get All Variant Options
      tags:
        - Product Variant Options
        - Catalog
    post:
      parameters:
        - name: Option
          in: body
          required: true
          schema:
            $ref: '#/definitions/OptionPost'
          x-examples:
            Create a Size Variant:
              product_id: 134
              name: Size Rectangle
              display_name: Size
              type: rectangles
              option_values:
                - label: S
                  sort_order: 0
                  is_default: false
                - label: M
                  sort_order: 1
                  is_default: true
                - label: L
                  sort_order: 2
                  is_default: false
            Create a Color Variant: |-
              {
                  "product_id": 134,
                 "name": "Colors",
                 "display_name": "Color",
                 "type": "swatch",
                 "sort_order": 1,
                 "option_values": [
                     {
                         "label": "Blue",
                         "sort_order": 1,
                         "value_data": {
                             "colors": [
                                 "#123c91"
                             ]
                         },
                         "is_default": false
                     },
                     {
                         "label": "Green",
                         "sort_order": 2,
                         "value_data": {
                             "colors": [
                                 "#0f961e"
                             ]
                         },
                         "is_default": false
                     },
                     {
                         "label": "Red",
                         "sort_order": 3,
                         "value_data": {
                             "colors": [
                                 "#e60c0c"
                             ]
                         },
                         "is_default": false
                     }
                 ]
              }
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      description: |-
        Creates a *Variant Option*.

        **Required Fields**
        * display_name
        * type
        * option_values

        **Read-Only Fields**
        * id

        **Notes**

        * Only one variant option at a time can be created; individual variant options will contain an array of multiple values. 
        * There are several examples listed below that create options, but the SKU’s are not updated and they are not a variant on the product. Variant SKUs must be created with a separate request.
        * Variant options will show on the storefront as an option that can be selected by the customer. A request like this could be used to add new choices to a variant that has already been created.
        * If more than one variant needs to be created use the [Create a Product](/api-reference/catalog/catalog-api/products/createproduct) endpoint.
      operationId: createOption
      responses:
        '200':
          $ref: '#/responses/OptionResponse'
        '409':
          description: |
            Option was in conflict with another option. This is the result of duplicate unique fields, such as `name`.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            Option was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Variant Option
      tags:
        - Product Variant Options
        - Catalog
  '/catalog/products/{product_id}/options/{option_id}':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/OptionIdParam'
    get:
      description: Returns a single *Variant Option*. Optional parameters can be passed in.
      operationId: getOptionById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Accept'
      responses:
        '200':
          $ref: '#/responses/OptionResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Variant Option
      tags:
        - Product Variant Options
        - Catalog
    put:
      description: |-
        Updates a *Variant Option*.

        **Read-Only Fields**
        * id
      operationId: updateOption
      parameters:
        - name: option
          in: body
          required: true
          schema:
            $ref: '#/definitions/OptionPut'
          x-examples:
            application/json:
              id: 22
              product_id: 77
              display_name: Colors
              type: radio_buttons
              config:
                default_value: text
                checked_by_default: false
                date_limit_mode: earliest
                file_types_mode: specific
                file_types_supported: []
                file_types_other: []
                text_min_length: 15
                text_max_length: 50
                text_lines_limited: true
                text_max_lines: 2
                number_limit_mode: lowest
                product_list_adjusts_inventory: true
                product_list_adjusts_pricing: true
                product_list_shipping_calc: none
              option_values:
                - id: 44
                  label: Pick a color
                  sort_order: 9
                  value_data:
                    colors:
                      - '#123c91, #FFFF00, #397a44'
                  is_default: false
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/OptionResponse'
        '409':
          description: |
            The `Option` was in conflict with another option. This is the result of duplicate unique fields, such as `name`.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `Option` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a Variant Option
      tags:
        - Product Variant Options
        - Catalog
    delete:
      operationId: deleteOptionById
      responses:
        '204':
          description: ''
      summary: Delete a Variant Option
      description: Deletes a *Variant Option*.
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Product Variant Options
        - Catalog
  '/catalog/products/{product_id}/options/{option_id}/values':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/OptionIdParam'
    get:
      description: Returns a list of all *Variant Option Values*. Optional parameters can be passed in.
      operationId: getOptionValues
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/OptionValueCollectionResponse'
      summary: Get All Variant Option Values
      tags:
        - Product Variant Option Values
        - Product Variant Options
        - Catalog
    post:
      description: |-
        Creates a *Variant Option Value*.

        **Required Fields**
        * label
        * sort_order

        **Read-Only Fields**
        * id
      operationId: createOptionValue
      parameters:
        - name: OptionValue
          in: body
          required: true
          schema:
            $ref: '#/definitions/OptionValuePost'
          x-examples:
            application/json:
              is_default: true
              label: Colors
              sort_order: 2
              value_data:
                colors:
                  - '#123c91, #FFFF00, #397a44'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OptionValueResponse'
          examples:
            application/json:
              data:
                id: 44
                label: Pick a color
                sort_order: 9
                value_data:
                  colors:
                    - '#123c91, #FFFF00, #397a44'
                is_default: false
        '422':
          description: |
            The `OptionValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Variant Option Value
      tags:
        - Product Variant Option Values
        - Product Variant Options
        - Catalog
  '/catalog/products/{product_id}/options/{option_id}/values/{value_id}':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/OptionIdParam'
      - $ref: '#/parameters/ValueIdParam'
    get:
      description: Returns a single *Variant Option Value*. Optional parameters can be passed in.
      operationId: getOptionValueById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
      responses:
        '200':
          $ref: '#/responses/OptionValueResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get Variant Option Value
      tags:
        - Product Variant Option Values
        - Product Variant Options
        - Catalog
    put:
      description: |-
        Updates a *Variant Option Value*.

        **Read-Only Fields**
        * id
      operationId: updateOptionValue
      parameters:
        - name: OptionValue
          in: body
          required: true
          description: |
            A BigCommerce `OptionValue` object.
          schema:
            $ref: '#/definitions/OptionValuePut'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/OptionValueResponse'
        '422':
          description: |
            The `OptionValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a Variant Option Value
      tags:
        - Product Variant Option Values
        - Product Variant Options
        - Catalog
    delete:
      description: Deletea a *Variant Option Value*.
      operationId: deleteOptionValueById
      responses:
        '204':
          description: ''
      summary: Delete Variant Option Value
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Product Variant Option Values
        - Product Variant Options
        - Catalog
  '/catalog/products/{product_id}/modifiers':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
    get:
      description: Returns a list of all *Product Modifiers*. Optional parameters can be passed in.
      operationId: getModifiers
      parameters:
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ModifierCollectionResponse'
      summary: Get All Product Modifiers
      tags:
        - Product Modifiers
        - Catalog
    post:
      description: |-
        Creates a *Product Modifier*.

        **Required Fields**
        * required
        * display_name
        * type

        **Read-Only Fields**
        * id

        There are two steps to create a modifier. 
        1. Add the modifier using the [Create Modifier](/api-reference/catalog/catalog-api/product-modifiers/createmodifier). 
        2. [Update](/api-reference/catalog/catalog-api/product-modifiers/updatemodifier) the modifier values. 
      operationId: createModifier
      parameters:
        - name: Modifier
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifierPost'
          x-examples:
            application/json:
              type: checkbox
              required: false
              config:
                default_value: 'Yes'
                checked_by_default: false
                checkbox_label: Check for Donation
              display_name: Add a $5 Donation
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ModifierResponse'
        '409':
          description: |
            The `Modifier` was in conflict with another option. This is the result of duplicate unique fields, such as `name`.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `Modifier` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Product Modifier
      tags:
        - Product Modifiers
        - Catalog
  '/catalog/products/{product_id}/modifiers/{modifier_id}':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/ModifierIdParam'
    get:
      operationId: getModifierById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ModifierResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Modifier
      description: Returns a single *Product Modifier*. Optional parameters can be passed in.
      tags:
        - Product Modifiers
        - Catalog
    put:
      description: |-
        Updates a *Product Modifier*.

        **Required Fields**
        * none

        **Read-Only Fields**
        * id

        There are two steps to create a modifier. 
        1. Add the modifier using the [Create Modifier](/api-reference/catalog/catalog-api/product-modifiers/createmodifier). 
        2. [Update](/api-reference/catalog/catalog-api/product-modifiers/updatemodifier) the modifier values. 
      operationId: updateModifier
      parameters:
        - name: modifier
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifierPut'
          x-examples:
            application/json:
              type: date
              required: true
              config:
                default_value: text
                checked_by_default: false
                date_limit_mode: earliest
                file_types_mode: specific
                file_types_supported: []
                file_types_other: []
                text_min_length: 15
                text_max_length: 50
                text_lines_limited: true
                text_max_lines: 2
                number_limit_mode: lowest
                product_list_adjusts_inventory: true
                product_list_adjusts_pricing: true
                product_list_shipping_calc: none
              option_values:
                - id: 22
                  is_default: false
                  label: ''
                  sort_order: 0
                  value_data:
                    colors:
                      - '#123c91, #FFFF00, #397a44'
                  adjusters:
                    price:
                      adjuster: relative
                      adjuster_value: 6
                    weight:
                      adjuster: relative
                      adjuster_value: 6
                    purchasing_disabled:
                      status: true
                      message: This product is not available for purchase.
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ModifierResponse'
        '409':
          description: |
            The `Modifier` was in conflict with another modifier or option. This is the result of duplicate unique fields, such as `name`.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `Modifier` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a Modifier
      tags:
        - Product Modifiers
        - Catalog
    delete:
      description: Deletes a *Product Modifier*.
      operationId: deleteModifierById
      responses:
        '204':
          description: ''
      summary: Delete a Modifier
      parameters:
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Accept'
      tags:
        - Product Modifiers
        - Catalog
  '/catalog/products/{product_id}/modifiers/{modifier_id}/values':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/ModifierIdParam'
    get:
      description: Returns a list of all product *Modifier Values*. Optional parameters can be passed in.
      operationId: getModifierValues
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ModifierValueCollectionResponse'
      summary: Get All Modifier Values
      tags:
        - Product Modifier Values
        - Product Modifiers
        - Catalog
    post:
      description: |-
        Creates a *Modifier Value*.

        **Required Fields**
        * label
        * sort_order

        **Read-Only Fields**
        * id

        There are two steps to create a modifier. 
        1. Add the modifier using the [Create Modifier](/api-reference/catalog/catalog-api/product-modifiers/createmodifier). 
        2. [Update](/api-reference/catalog/catalog-api/product-modifiers/updatemodifier) the modifier values. 
      operationId: createModifierValue
      parameters:
        - name: ModifierValue
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifierValuePost'
          x-examples:
            application/json:
              is_default: false
              adjusters:
                price:
                  adjuster: relative
                  adjuster_value: 5
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ModifierValueResponse'
        '422':
          description: |
            The `ModifierValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Modifier Value
      tags:
        - Product Modifier Values
        - Product Modifiers
        - Catalog
  '/catalog/products/{product_id}/modifiers/{modifier_id}/values/{value_id}':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/ModifierIdParam'
      - $ref: '#/parameters/ValueIdParam'
    get:
      description: Returns a single *Modifier Value*. Optional parameters can be passed in.
      operationId: getModifierValueById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ModifierValueResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Modifier Value
      security:
        - X-Auth-Client: []
        - X-Auth-Token: []
      tags:
        - Product Modifier Values
        - Product Modifiers
        - Catalog
    put:
      description: |-
        Updates a *Modifier Value*.

        **Required Fields**
        * none

        **Read-Only Fields**
        * id

        There are two steps to create a modifier. 
        1. Add the modifier using the [Create Modifier](/api-reference/catalog/catalog-api/product-modifiers/createmodifier). 
        2. [Update](/api-reference/catalog/catalog-api/product-modifiers/updatemodifier) the modifier values. 
      operationId: updateModifierValue
      parameters:
        - name: ModifierValue
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifierValuePut'
          x-examples:
            application/json:
              id: 190
              adjusters:
                price:
                  adjuster: relative
                  adjuster_value: 6
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ModifierValueResponse'
        '422':
          description: |
            The `ModifierValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a Modifier Value
      tags:
        - Product Modifier Values
        - Product Modifiers
        - Catalog
    delete:
      description: Deletes a *Modifier Value*.
      operationId: deleteModifierValueById
      responses:
        '204':
          description: ''
      summary: Delete Modifier Value
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Product Modifier Values
        - Product Modifiers
        - Catalog
  '/catalog/products/{product_id}/modifiers/{modifier_id}/values/{value_id}/image':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/ModifierIdParam'
      - name: value_id
        description: |
          The ID of the `Modifier`.
        required: true
        in: path
        type: integer
    post:
      description: |-
        Creates a *Modifier Image*.

        The image will show on the storefront when the value is selected.

         **Required Fields**
        - image_file: Form posts are the only accepted upload option.
      operationId: createModifierImage
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
        - in: formData
          name: image_file
          type: file
      consumes:
        - multipart/form-data
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ImageResponse'
          examples:
            application/json:
              data:
                image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/product_images/attribute_rule_images/85_source_1536863430.png'
              meta: {}
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
        '422':
          description: |
            Modifier image was not valid. This is the result of missing `image_file` fields, or of a non-URL value for the `image_file` field. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create Modifier Image
      tags:
        - Product Modifier Images
        - Product Modifiers
        - Catalog
    delete:
      description: |-
        Deletes a *Modifier Image*.

        Deletes the image that was set to show when the modifier value is selected.
      operationId: deleteModifierImage
      responses:
        '204':
          description: ''
      summary: Delete Modifier Image
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Product Modifier Images
        - Product Modifiers
        - Catalog
  '/catalog/products/{product_id}/complex-rules':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
    get:
      description: Returns a list of all product *Complex Rules*. Optional parameters may be passed in.
      operationId: getComplexRules
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ComplexRuleCollectionResponse'
      summary: Get Complex Rules
      tags:
        - Product Complex Rules
        - Catalog
    post:
      operationId: createComplexRule
      parameters:
        - name: ComplexRule
          in: body
          required: true
          schema:
            $ref: '#/definitions/ComplexRuleBase'
          x-examples:
            application/json:
              product_id: 77
              sort_order: 0
              enabled: true
              stop: false
              purchasing_disabled: false
              purchasing_hidden: false
              price_adjuster:
                adjuster: relative
                adjuster_value: 6
              weight_adjuster:
                adjuster: relative
                adjuster_value: 6
              conditions:
                - id: 5
                  rule_id: 5
                  modifier_id: 123
                  modifier_value_id: 104
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/responses/ComplexRuleResponse'
          examples:
            application/json:
              data:
                - id: 82
                  product_id: 195
                  sort_order: 0
                  enabled: true
                  stop: false
                  price_adjuster:
                    adjuster: relative
                    adjuster_value: 8
                  weight_adjuster: null
                  purchasing_disabled: false
                  purchasing_disabled_message: ''
                  purchasing_hidden: false
                  image_url: ''
                  conditions:
                    - rule_id: 82
                      modifier_id: 221
                      modifier_value_id: 175
                      variant_id: null
                      combination_id: 0
                - id: 83
                  product_id: 195
                  sort_order: 1
                  enabled: true
                  stop: false
                  price_adjuster: null
                  weight_adjuster:
                    adjuster: relative
                    adjuster_value: 3
                  purchasing_disabled: false
                  purchasing_disabled_message: ''
                  purchasing_hidden: false
                  image_url: ''
                  conditions:
                    - rule_id: 83
                      modifier_id: 221
                      modifier_value_id: 174
                      variant_id: null
                      combination_id: 0
              meta:
                pagination:
                  total: 2
                  count: 2
                  per_page: 50
                  current_page: 1
                  total_pages: 1
                  links:
                    current: '?page=1&limit=50'
        '409':
          description: |
            The `ComplexRule` was in conflict with another `ComplexRule`. This is the result of duplicate conditions.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `ComplexRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Complex Rule
      description: |-
        Creates a product *Complex Rule*.

        **Required Fields**
        - modifier_id
        - modifier_value_id
        - modifier_value_id
        - variant_id

        **Read-Only Fields**
        - complex_rule_id
        - conditions_id
        - rule_id
        - combination_id
        - id
      tags:
        - Product Complex Rules
        - Catalog
  '/catalog/products/{product_id}/complex-rules/{complex_rule_id}':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/ComplexRuleIdParam'
    get:
      description: Returns a single *Complex Rule*. Optional parameters can be passed in.
      operationId: getComplexRuleById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/responses/ComplexRuleResponse'
          examples:
            application/json:
              data:
                id: 83
                product_id: 195
                sort_order: 1
                enabled: true
                stop: false
                price_adjuster: null
                weight_adjuster:
                  adjuster: relative
                  adjuster_value: 3
                purchasing_disabled: false
                purchasing_disabled_message: ''
                purchasing_hidden: false
                image_url: ''
                conditions:
                  - rule_id: 83
                    modifier_id: 221
                    modifier_value_id: 174
                    variant_id: null
                    combination_id: 0
              meta: {}
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Complex Rule
      tags:
        - Product Complex Rules
        - Catalog
    put:
      description: |-
        Updates a *Complex Rule*.

        **Required Fields**:
        - none

        **Read-Only Fields**:
        - complex_rule_id
        - conditions_id
        - rule_id
        - combination_id
        - id
      operationId: updateComplexRule
      parameters:
        - name: ComplexRule
          in: body
          required: true
          schema:
            $ref: '#/definitions/ComplexRuleBase'
          x-examples:
            application/json:
              product_id: 77
              sort_order: 0
              enabled: true
              stop: false
              purchasing_disabled: false
              purchasing_hidden: false
              price_adjuster:
                adjuster: relative
                adjuster_value: 6
              weight_adjuster:
                adjuster: relative
                adjuster_value: 6
              id: 5
              conditions:
                - id: 5
                  rule_id: 5
                  modifier_id: 123
                  modifier_value_id: 104
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/responses/ComplexRuleResponse'
          examples:
            application/json:
              data:
                id: 83
                product_id: 195
                sort_order: 1
                enabled: true
                stop: false
                price_adjuster: null
                weight_adjuster:
                  adjuster: relative
                  adjuster_value: 3
                purchasing_disabled: false
                purchasing_disabled_message: ''
                purchasing_hidden: false
                image_url: ''
                conditions:
                  - rule_id: 83
                    modifier_id: 221
                    modifier_value_id: 174
                    variant_id: null
                    combination_id: 0
              meta: {}
        '409':
          description: |
            The `ComplexRule` was in conflict with another `ComplexRule`. This is the result of duplicate conditions.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `ComplexRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a Complex Rule
      tags:
        - Product Complex Rules
        - Catalog
    delete:
      description: Deletes a product *Complex Rule*.
      operationId: deleteComplexRuleById
      responses:
        '204':
          description: ''
      summary: Delete a Complex Rule
      parameters:
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Accept'
      tags:
        - Product Complex Rules
        - Catalog
  '/catalog/products/{product_id}/custom-fields':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
    get:
      description: Returns a list of product *Custom Fields*. Optional parameters can be passed in.
      operationId: getCustomFields
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/CustomFieldCollectionResponse'
      summary: Get Custom Fields
      tags:
        - Product Custom Fields
        - Catalog
    post:
      description: |-
        Creates a *Custom Field*.

        **Required Fields:**
        - name
        - value

        **Read-Only:**
        - id
      operationId: createCustomField
      parameters:
        - name: CustomField
          in: body
          required: true
          schema:
            $ref: '#/definitions/CustomFieldBase'
          x-examples:
            application/json:
              name: Release Year
              value: '1976'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/CustomFieldResponse'
        '404':
          description: |
            The parent resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
        '422':
          description: |
            The `CustomField` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Custom Fields
      tags:
        - Product Custom Fields
        - Catalog
  '/catalog/products/{product_id}/custom-fields/{custom_field_id}':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/CustomFieldIdParam'
    get:
      description: Returns a single *Custom Field*. Optional parameters can be passed in.
      operationId: getCustomFieldById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/CustomFieldResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Custom Field
      tags:
        - Product Custom Fields
        - Catalog
    put:
      description: |-
        Updates a *Custom Field*. 

        **Required Fields**
        - none

        **Read-Only**
        - id
      operationId: updateCustomField
      parameters:
        - name: CustomField
          in: body
          required: true
          schema:
            $ref: '#/definitions/CustomFieldBase'
          x-examples:
            application/json:
              name: Release year
              value: '1987'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/CustomFieldResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
        '422':
          description: |
            The `CustomField` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a Custom Field
      tags:
        - Product Custom Fields
        - Catalog
    delete:
      description: Deletes a product *Custom Field*.
      operationId: deleteCustomFieldById
      responses:
        '204':
          description: ''
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete a Custom Field
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Product Custom Fields
        - Catalog
  '/catalog/products/{product_id}/bulk-pricing-rules':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/PageParam'
      - $ref: '#/parameters/LimitParam'
    get:
      description: Returns a list of *Bulk Pricing Rules*. Optional parameters can be passed in.
      operationId: getBulkPricingRules
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
      responses:
        '200':
          $ref: '#/responses/BulkPricingRuleCollectionResponse'
        '404':
          description: |
            The parent resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get All Bulk Pricing Rules
      tags:
        - Product Bulk Pricing Rules
        - Catalog
    post:
      description: |-
        Creates a *Bulk Pricing Rule*.

        **Required Fields**
        - quantity_min
        - quantity_max
        - type
        - amount

        **Read-Only Fields**
        - id
      operationId: createBulkPricingRule
      parameters:
        - name: BulkPricingRule
          in: body
          required: true
          schema:
            $ref: '#/definitions/BulkPricingRuleBase'
          x-examples:
            application/json:
              - id: 59
                quantity_min: 1
                quantity_max: 10
                type: price
                amount: 1
              - id: 60
                quantity_min: 11
                quantity_max: 20
                type: price
                amount: 1.5
              - id: 61
                quantity_min: 21
                quantity_max: 30
                type: price
                amount: 1.75
              - id: 62
                quantity_min: 31
                quantity_max: 0
                type: price
                amount: 2
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/BulkPricingRuleResponse'
        '404':
          description: |
            The parent resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
        '409':
          description: |
            The `BulkPricingRule` was in conflict with another bulk pricing rule. This is the result of quantity range overlapping with existing bulk pricing rules.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `BulkPricingRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Creates a Bulk Pricing Rule
      tags:
        - Product Bulk Pricing Rules
        - Catalog
  '/catalog/products/{product_id}/bulk-pricing-rules/{bulk_pricing_rule_id}':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/BulkPricingRuleIdParam'
    get:
      description: Returns a single *Bulk Pricing Rule*. Optional parameters can be passed in.
      operationId: getBulkPricingRuleById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/BulkPricingRuleResponse'
        '404':
          description: |
            The resource or parent resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Bulk Pricing Rule
      tags:
        - Product Bulk Pricing Rules
        - Catalog
    put:
      description: |-
        Updates a *Bulk Pricing Rule*.

        **Required Fields**
        * none

        **Read-Only Fields**
        - id
      operationId: updateBulkPricingRule
      parameters:
        - name: BulkPricingRule
          in: body
          required: true
          schema:
            $ref: '#/definitions/BulkPricingRuleBase'
          x-examples:
            application/json:
              quantity_min: 10
              quantity_max: 50
              type: price
              amount: 10
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/BulkPricingRuleResponse'
        '404':
          description: |
            The resource or parent resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
        '409':
          description: |
            The `BulkPricingRule` was in conflict with another bulk pricing rule. This is the result of quantity range overlapping with existing bulk pricing rules.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `BulkPricingRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a Bulk Pricing Rule
      tags:
        - Product Bulk Pricing Rules
        - Catalog
    delete:
      description: Deletes a *Bulk Pricing Rule*.
      operationId: deleteBulkPricingRuleById
      responses:
        '204':
          description: ''
        '404':
          description: |
            The resource or parent resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Delete a Bulk Pricing Rule
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Product Bulk Pricing Rules
        - Catalog
  '/catalog/products/{product_id}/metafields':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
    get:
      description: Returns a list of *Product Metafields*. Optional parameters can be passed in.
      operationId: getProductMetafieldsByProductId
      parameters:
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/MetafieldKeyParam'
        - $ref: '#/parameters/MetafieldNamespaceParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldCollectionResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get All Product Metafields
      tags:
        - Product Metafields
        - Catalog
    post:
      description: |-
        Creates a *Product Metafield*.

        **Required Fields:**
        * permission_set
        * namespace
        * key
        * value

        **Read-Only Fields**
        * id
      operationId: createProductMetafield
      parameters:
        - name: Metafield
          in: body
          required: true
          schema:
            $ref: '#/definitions/MetafieldPost'
          x-examples:
            application/json:
              permission_set: app_only
              namespace: App Namespace
              key: location_id
              value: 'Shelf 3, Bin 5'
              description: Where products are located
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldResponse'
        '409':
          description: |
            The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique key combinations of the app's client id, namespace, key, resource_type, and resource_id.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Product Metafield
      tags:
        - Product Metafields
        - Catalog
  '/catalog/products/{product_id}/metafields/{metafield_id}':
    parameters:
      - $ref: '#/parameters/MetafieldIdParam'
      - $ref: '#/parameters/ProductIdParam'
    get:
      description: Returns a single *Product Metafield*. Optional parameters can be passed in.
      operationId: getProductMetafieldByProductId
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Product Metafield
      tags:
        - Product Metafields
        - Catalog
    put:
      description: |-
        Updates a *Product Metafield*.

        **Required Fields**
        * none

        **Read-Only Fields**
        * id
      operationId: updateProductMetafield
      parameters:
        - name: Metafield
          in: body
          required: true
          schema:
            $ref: '#/definitions/MetafieldPost'
          x-examples:
            application/json:
              permission_set: app_only
              namespace: Warehouse SKUS
              key: Location
              value: 4H
              description: Location in the warehouse
              resource_type: product
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a Product Metafield
      tags:
        - Product Metafields
        - Catalog
    delete:
      description: Deletes a *Product Metafield*.
      operationId: deleteProductMetafieldById
      responses:
        '204':
          description: ''
      summary: Delete a Product Metafield
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Product Metafields
        - Catalog
  '/catalog/products/{product_id}/reviews':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
    get:
      description: Returns a list of all *Product Reviews*. Optional parameters can be passed in.
      operationId: getProductReviews
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductReviewCollectionResponse'
        '204':
          description: |
            There are no reviews on this product.
        '404':
          description: |
            The product ID does not exist.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get Product Reviews
      tags:
        - Product Reviews
        - Catalog
    post:
      description: |-
        Creates a *Product Review*.

        **Required Fields**
        - title
        - date_reviewed

        **Read-Only Fields**
        * id
      operationId: createProductReview
      parameters:
        - name: productReview
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductReviewPost'
          x-examples:
            application/json:
              title: Great Product
              text: This product is amazing!!!
              status: approved
              rating: 5
              email: janedoe@email.com
              name: Jane Doe
              date_reviewed: '2018-05-07T19:37:13+00:00'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductReviewResponse'
        '404':
          description: |
            The product ID does not exist.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Create a Product Review
      tags:
        - Product Reviews
        - Catalog
  '/catalog/products/{product_id}/reviews/{review_id}':
    parameters:
      - $ref: '#/parameters/ProductIdParam'
      - $ref: '#/parameters/ReviewIdParam'
    get:
      description: Returns a single *Product Review*. Optional parameters maybe passed in.
      operationId: getProductReviewById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductReviewResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Product Review
      tags:
        - Product Reviews
        - Catalog
    put:
      description: |-
        Updates a *Product Review*.

        **Required Fields**
        * none

        **Read-Only Fields**
        * id
      operationId: updateProductReview
      parameters:
        - name: productReview
          in: body
          required: true
          description: |
            A BigCommerce `ProductReview` object.
          schema:
            $ref: '#/definitions/ProductReviewPut'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/ProductReviewResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a Product Review
      tags:
        - Product Reviews
        - Catalog
    delete:
      description: Deletes a *Product Review*.
      operationId: deleteProductReview
      responses:
        '204':
          description: ''
      summary: Delete a Product Review
      tags:
        - Product Reviews
        - Catalog
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
  /catalog/categories:
    get:
      description: Returns a list of *Cateogories*. Optional filter parameters can be passed in.
      operationId: getCategories
      parameters:
        - $ref: '#/parameters/FilterNameParam'
        - $ref: '#/parameters/FilterParentIdParam'
        - $ref: '#/parameters/FilterPageTitleParam'
        - $ref: '#/parameters/FilterKeywordParam'
        - $ref: '#/parameters/FilterIsVisibleParam'
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
        - in: query
          name: categories
          type: string
          description: 'To ensure that your request will retrieve products that are also cross-listed in additional categories beyond the categories you''ve specified, use the syntax: `categories:in=`'
      responses:
        '200':
          $ref: '#/responses/CategoryCollectionResponse'
      summary: Get All Categories
      tags:
        - Category
        - Catalog
    post:
      description: |-
        Creates a *Category*.

        **Required Fields**:
        - parent_id: Only required if creating a child category.
        - name

        **Read-Only Fields**:
        - id
      operationId: createCategory
      parameters:
        - name: category
          in: body
          required: true
          schema:
            $ref: '#/definitions/CategoryBase'
          x-examples:
            application/json:
              name: Bath
              description: <p>We offer a wide variety of products perfect for relaxing</p>
              views: 1050
              sort_order: 3
              meta_keywords: []
              layout_file: category.html
              is_visible: true
              default_product_sort: use_store_settings
              image_url: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
              custom_url:
                url: /bath/
                is_customized: false
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/CategoryResponse'
        '409':
          description: |
            The `Category` was in conflict with another category. This is the result of duplicate unique values, such as `name` or `custom_url`.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `Category` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Category
      tags:
        - Category
        - Catalog
    delete:
      description: |-
        By default, it deletes all *Category* objects. A filter should be added to avoid deleting all *Category* objects in a store.

        Deleting the category will also delete all products in that category. If you want to keep the products, best practice is to move the products to a new category before deleting. 
      operationId: deleteCategories
      parameters:
        - $ref: '#/parameters/FilterNameParam'
        - $ref: '#/parameters/FilterParentIdParam'
        - $ref: '#/parameters/FilterPageTitleParam'
        - $ref: '#/parameters/FilterKeywordParam'
        - $ref: '#/parameters/FilterIsVisibleParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '204':
          description: ''
      summary: Delete Categories
      tags:
        - Category
        - Catalog
  '/catalog/categories/{category_id}':
    parameters:
      - $ref: '#/parameters/CategoryIdParam'
    get:
      description: Returns a single *Category*. Optional parameters can be passed in.
      operationId: getCategoryById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
      responses:
        '200':
          $ref: '#/responses/CategoryResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Category
      tags:
        - Category
        - Catalog
    put:
      description: |-
        Updates a *Category*.

        **Required Fields**
        * none

        **Read-Only Fields**
        - id
      operationId: updateCategory
      parameters:
        - name: category
          in: body
          required: true
          schema:
            $ref: '#/definitions/CategoryBase'
          x-examples:
            application/json:
              description: <h1>Browse our full collection</h1>
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/CategoryResponse'
        '404':
          description: The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
        '409':
          description: 'The `Category` was in conflict with another category. This is the result of duplicate unique values, such as `name` or `custom_url`.'
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: 'The `Category` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a Category
      tags:
        - Category
        - Catalog
    delete:
      description: Deletes a *Category*.
      operationId: deleteCategoryById
      responses:
        '204':
          description: ''
      summary: Delete a Category
      tags:
        - Category
        - Catalog
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
  '/catalog/categories/{category_id}/metafields':
    parameters:
      - $ref: '#/parameters/CategoryIdParam'
    get:
      description: Returns a list of *Metafields* on a *Category*. Optional filter parameters can be passed in.
      operationId: getCategoryMetafieldsByCategoryId
      parameters:
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/MetafieldKeyParam'
        - $ref: '#/parameters/MetafieldNamespaceParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldCollectionResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get All Category Metafields
      tags:
        - Category Metafields
        - Category
        - Catalog
    post:
      description: |-
        Creates a *Cateory Metafield*.

        **Required Fields:**
        - permission_set
        - namespace
        - key
        - value

        **Read-Only Fields**
        - id
      operationId: createCategoryMetafield
      parameters:
        - name: Metafield
          in: body
          required: true
          schema:
            $ref: '#/definitions/MetafieldBase'
          x-examples:
            application/json:
              permission_set: app_only
              namespace: App Namespace
              key: location_id
              value: 'Shelf 3, Bin 5'
              description: Where products are located
              resource_type: category
              resource_id: 111
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldResponse'
        '409':
          description: |
            The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate, unique key combinations of the app's client id, namespace, key, resource_type, and resource_id.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Category Metafield
      tags:
        - Category Metafields
        - Category
        - Catalog
  '/catalog/categories/{category_id}/metafields/{metafield_id}':
    parameters:
      - $ref: '#/parameters/MetafieldIdParam'
      - $ref: '#/parameters/CategoryIdParam'
    get:
      description: Returns a single *Category Metafield*. Optional parameters can be passed in.
      operationId: getCategoryMetafieldByCategoryId
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldResponse'
        '404':
          description: The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Category Metafield
      tags:
        - Category Metafields
        - Category
        - Catalog
    put:
      description: |-
        Updates a *Category Metafield*.

        **Required Fields**
        * none

        **Read-Only Fields**
        - id
      operationId: updateCategoryMetafield
      parameters:
        - name: Metafield
          in: body
          required: true
          schema:
            $ref: '#/definitions/MetafieldBase'
          x-examples:
            application/json:
              permission_set: app_only
              namespace: Warehouse SKUS
              key: Location
              value: 4H
              description: Location in the warehouse
              resource_type: category
              resource_id: 111
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a Category Metafield
      tags:
        - Category Metafields
        - Category
        - Catalog
    delete:
      description: Deletes a *Category Metafield*.
      operationId: deleteCategoryMetafieldById
      responses:
        '204':
          description: ''
      summary: Delete a Category Metafield
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Category Metafields
        - Category
        - Catalog
  '/catalog/categories/{category_id}/image':
    parameters:
      - $ref: '#/parameters/CategoryIdParam'
    post:
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
        - in: formData
          name: image_file
          type: file
      consumes:
        - multipart/form-data
      description: |-
        Create a *Category Image*.

         **Required Fields**
        - image_file: Form posts are the only accepted upload option.

        Only one image at a time can be created.  
        To update a *Category Image*, use the [PUT Categories](/api-reference/catalog/catalog-api/category/updatecategory) and an `image_url`. 
      operationId: createCategoryImage
      responses:
        '200':
          $ref: '#/responses/BrandImageUpload'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
        '422':
          description: |
            Image was not valid. This is the result of a missing `image_file` field or an incorrect file type. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Category Image
      tags:
        - Category Images
        - Category
        - Catalog
    delete:
      description: Deletes a *Cateogory Image*.
      operationId: deleteCategoryImage
      responses:
        '204':
          description: ''
      summary: Delete a Category Image
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      tags:
        - Category Images
        - Category
        - Catalog
  /catalog/categories/tree:
    get:
      description: 'Returns the categories tree, a nested lineage of the categories with parent->child relationship. The Category objects returned are simplified versions of the category objects returned in the rest of this API.'
      operationId: getCategoryTree
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CategoryTreeCollectionResponse'
          examples:
            application/json:
              data:
                - id: 23
                  parent_id: 0
                  name: Shop All
                  is_visible: true
                  url: /shop-all/
                  children: []
                - id: 19
                  parent_id: 0
                  name: Garden
                  is_visible: true
                  url: /garden/
                  children:
                    - id: 39
                      parent_id: 19
                      name: Bath
                      is_visible: true
                      url: /garden/bath/
                      children: []
                - id: 21
                  parent_id: 0
                  name: Kitchen
                  is_visible: true
                  url: /kitchen/
                  children: []
                - id: 20
                  parent_id: 0
                  name: Publications
                  is_visible: true
                  url: /publications/
                  children: []
                - id: 22
                  parent_id: 0
                  name: Utility
                  is_visible: true
                  url: /utility/
                  children: []
              meta: {}
      summary: Get Category Tree
      tags:
        - Category
        - Catalog
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
  /catalog/brands:
    get:
      description: Returns a list of *Brands*. Optional filter parameters can be passed in.
      operationId: getBrands
      parameters:
        - $ref: '#/parameters/FilterNameParam'
        - $ref: '#/parameters/FilterPageTitleParam'
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/BrandCollectionResponse'
      summary: Get All Brands
      tags:
        - Brands
        - Catalog
    post:
      description: |-
        Creates a *Brand*.

        **Required Fields**
        - name

        **Read-Only Fields**
        - id
      operationId: createBrand
      parameters:
        - name: Brand
          in: body
          required: true
          schema:
            $ref: '#/definitions/BrandBase'
          x-examples:
            application/json:
              name: Common Good
              meta_keywords: []
              image_url: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
              custom_url:
                url: /brands/Common-Good.html
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/BrandResponse'
        '409':
          description: Brand was in conflict with another brand. This is the result of duplicate unique fields such as name.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: 'Brand was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Brand
      tags:
        - Brands
        - Catalog
    delete:
      description: 'By default, it deletes all *Brand* objects. A filter should be added to avoid deleting all *Brand* objects in a store.'
      operationId: deleteBrands
      parameters:
        - $ref: '#/parameters/FilterNameParam'
        - $ref: '#/parameters/FilterPageTitleParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '204':
          description: ''
      tags:
        - Brands
        - Catalog
      summary: Delete Brands
  '/catalog/brands/{brand_id}':
    parameters:
      - $ref: '#/parameters/BrandIdParam'
    get:
      description: Returns a single *Brand*. Optional filter parameters can be passed in.
      operationId: getBrandById
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Accept'
      responses:
        '200':
          $ref: '#/responses/BrandResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Brand
      tags:
        - Brands
        - Catalog
    put:
      description: |-
        Updates a *Brand*.

        **Required Fields**
        - None

        **Read-Only Fields**
        - id

        To update a *Brand Image*, send a request with an `image_url`.
      operationId: updateBrand
      parameters:
        - name: brand
          in: body
          required: true
          schema:
            $ref: '#/definitions/BrandBase'
          x-examples:
            application/json:
              name: Common Good
              meta_keywords:
                - 'modern, clean, contemporary'
              search_keywords: 'kitchen, laundry, cart, storage'
              image_url: '"https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
            application/json 2:
              name: Common Good
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Accept'
      responses:
        '200':
          $ref: '#/responses/BrandResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
        '409':
          description: |
            The `Brand` was in conflict with another product. This is the result of duplicate unique values, such as `name`.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `Brand` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Update a Brand
      tags:
        - Brands
        - Catalog
    delete:
      description: Deletes a *Brand*.
      operationId: deleteBrandById
      responses:
        '204':
          description: ''
      summary: Delete a Brand
      tags:
        - Brands
        - Catalog
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
  '/catalog/brands/{brand_id}/metafields':
    parameters:
      - $ref: '#/parameters/BrandIdParam'
    get:
      description: 'Returns a list of *Brand Metafields*. Optional filter parameters can be passed in. '
      operationId: getBrandMetafieldsByBrandId
      parameters:
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/MetafieldKeyParam'
        - $ref: '#/parameters/MetafieldNamespaceParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Accept'
      responses:
        '200':
          $ref: '#/responses/MetafieldCollectionResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get All Brand Metafields
      tags:
        - Brand Metafields
        - Brands
        - Catalog
    post:
      description: |-
        Creates a *Brand Metafield*.

        **Required Fields**
        - permission_set
        - namespace
        - key
        - value

        **Read-Only Fields**
        - id
      operationId: createBrandMetafield
      parameters:
        - name: Metafield
          in: body
          required: true
          schema:
            $ref: '#/definitions/MetafieldPost'
          x-examples:
            application/json:
              permission_set: app_only
              namespace: App Namespace
              key: location_id
              value: 'Shelf 3, Bin 5'
              description: Product Location
              resource_type: brand
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Accept'
      responses:
        '200':
          $ref: '#/responses/MetafieldResponse'
        '409':
          description: |
            The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique key combination of the app's client id, namespace, key, resource_type, and resource_id.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: |
            The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a Brand Metafield
      tags:
        - Brand Metafields
        - Brands
        - Catalog
  '/catalog/brands/{brand_id}/metafields/{metafield_id}':
    parameters:
      - $ref: '#/parameters/MetafieldIdParam'
      - $ref: '#/parameters/BrandIdParam'
    get:
      description: Returns a *Brand Metafield*. Optional filter parameters can be passed in.
      operationId: getBrandMetafieldByBrandId
      parameters:
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get a Brand Metafields
      tags:
        - Brand Metafields
        - Brands
        - Catalog
    put:
      description: |-
        Updates a *Brand Metafield*.

        **Required Fields**  
        * none

        **Read-Only Fields**
        - id
      operationId: updateBrandMetafield
      parameters:
        - name: Metafield
          in: body
          required: true
          schema:
            $ref: '#/definitions/MetafieldBase'
          x-examples:
            application/json:
              permission_set: app_only
              namespace: Warehouse SKUS
              key: Location
              value: 4H
              description: Location in the warehouse
              resource_type: brand
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/responses/MetafieldResponse'
        '404':
          description: |
            The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Update a Brand Metafield
      tags:
        - Brand Metafields
        - Brands
        - Catalog
    delete:
      description: Deletes a *Brand Metafield*.
      operationId: deleteBrandMetafieldById
      responses:
        '204':
          description: ''
      summary: Delete a Brand Metafield
      tags:
        - Brand Metafields
        - Brands
        - Catalog
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
  '/catalog/brands/{brand_id}/image':
    parameters:
      - $ref: '#/parameters/BrandIdParam'
    post:
      description: |-
        Creates a *Brand Image*. 

        **Required Fields**
        - image_file: Form posts are the only accepted upload option.

        **Read-Only Fields**
        - id

        Only one image at a time can be created. To update a *Brand Image*, use the [PUT Brands](/api-reference/catalog/catalog-api/brands/updatebrand) and an `image_url`. 
      operationId: createBrandImage
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
        - in: formData
          name: image_file
          type: file
      responses:
        '200':
          $ref: '#/responses/BrandImageUpload'
        '404':
          description: The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
        '422':
          description: 'Image was not valid. This is the result of a missing `image_file` field, or of an incorrect file type. See the response for more details.'
          schema:
            $ref: '#/definitions/ErrorResponse'
          examples: {}
      summary: Create a Brand Image
      consumes:
        - multipart/form-data
      tags:
        - Brand Images
        - Brands
        - Catalog
    delete:
      description: Deletes a *Brand Image*.
      operationId: deleteBrandImage
      responses:
        '204':
          description: ''
      summary: Delete a Brand Image
      parameters:
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Accept'
      tags:
        - Brand Images
        - Brands
        - Catalog
  /catalog/variants:
    get:
      description: Returns a list of all variants in your catalog. Optional parameters can be passed in.
      operationId: getVariants
      parameters:
        - $ref: '#/parameters/FilterIdParam'
        - $ref: '#/parameters/FilterSkuParam'
        - $ref: '#/parameters/PageParam'
        - $ref: '#/parameters/LimitParam'
        - $ref: '#/parameters/FilterIncludeFieldsParam'
        - $ref: '#/parameters/FilterExcludeFieldsParam'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/product_id'
      responses:
        '200':
          $ref: '#/responses/CatalogVariantCollectionResponse'
        '404':
          description: The resource was not found.
          schema:
            $ref: '#/definitions/NotFound'
      summary: Get All Variants
      tags:
        - Catalog
  /catalog/summary:
    get:
      tags:
        - Catalog
      description: |-
        Returns a lightweight inventory summary from the BigCommerce Catalog.

        The inventory summary includes:
        * "inventory_count"
        * "variant_count"
        * "inventory_value"
        * "highest_variant_price"
        * "average_variant_price"
        * "lowest_variant_price"
        * "oldest_variant_date"
        * "newest_variant_date"
        * "primary_category_id"
        * "primary_category_name"
      responses:
        '200':
          $ref: '#/responses/CatalogSummaryResponse'
      summary: Get a Catalog Summary
      parameters:
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Content-Type'
      operationId: getCatalogSummary
parameters:
  FilterTemplateFileParam:
    in: query
    name: template_file
    description: 'The template file, for example: `pages/home`.'
    type: string
    required: false
  FilterIdParam:
    name: id
    description: |
      Filter items by id.
    required: false
    in: query
    type: integer
  FilterSkuParam:
    name: sku
    description: |
      Filter items by sku.
    required: false
    in: query
    type: string
  FilterNameParam:
    name: name
    description: |
      Filter items by name.
    required: false
    in: query
    type: string
  FilterEmailParam:
    name: email
    description: |
      Filter items by email.
    required: false
    in: query
    type: string
  FilterSourceParam:
    name: source
    description: |
      Filter items by source.
    required: false
    in: query
    type: string
  FilterOrderIdParam:
    name: order_id
    description: |
      Filter items by order_id.
    required: false
    in: query
    type: integer
  FilterUpcParam:
    name: upc
    description: |
      Filter items by upc.
    required: false
    in: query
    type: string
  FilterPriceParam:
    name: price
    description: |
      Filter items by price.
    required: false
    in: query
    type: number
  FilterSalePriceParam:
    name: sale_price
    description: |
      Filter items by sale_price.
    required: false
    in: query
    type: number
  FilterRetailPriceParam:
    name: retail_price
    description: |
      Filter items by retail_price.
    required: false
    in: query
    type: number
  FilterMapPriceParam:
    name: map_price
    description: |
      Filter items by map_price.
    required: false
    in: query
    type: number
  FilterCalculatedPriceParam:
    name: calculated_price
    description: |
      Filter items by calculated_price.
    required: false
    in: query
    type: number
  FilterWeightParam:
    name: weight
    description: |
      Filter items by weight.
    required: false
    in: query
    type: number
  FilterConditionParam:
    name: condition
    description: |
      Filter items by condition.
    required: false
    in: query
    type: integer
    enum:
      - new
      - used
      - refurbished
  FilterBrandIdParam:
    name: brand_id
    description: |
      Filter items by brand_id.
    required: false
    in: query
    type: integer
  FilterDateModifiedParam:
    name: date_modified
    description: 'Filter items by date_modified. For example `v3/catalog/products?date_modified:min=2018-06-15`'
    required: false
    in: query
    type: string
    format: date-time
  FilterDateCreatedParam:
    name: date_created
    description: |
      Filter items by date_created.
    required: false
    in: query
    type: string
    format: date-time
  FilterDateLastImportedParam:
    name: date_last_imported
    description: 'Filter items by date_last_imported. For example `v3/catalog/products?date_last_imported:min=2018-06-15`'
    required: false
    in: query
    type: string
    format: date-time
  FilterIsVisibleParam:
    name: is_visible
    description: 'Filter items by if visible on the storefront. '
    required: false
    in: query
    type: boolean
  FilterIsFeaturedParam:
    name: is_featured
    description: |
      Filter items by is_featured.
    required: false
    in: query
    type: integer
  FilterIsFreeShippingParam:
    name: is_free_shipping
    description: |
      Filter items by is_free_shipping.
    required: false
    in: query
    type: integer
  FilterInventoryLevelParam:
    name: inventory_level
    description: |
      Filter items by inventory_level.
    required: false
    in: query
    type: integer
  FilterInventoryLowParam:
    name: inventory_low
    description: |
      Filter items by inventory_low. Values: 1, 0.
    required: false
    in: query
    type: integer
  FilterOutOfStockParam:
    name: out_of_stock
    description: |
      Filter items by out_of_stock. To enable the filter, pass `out_of_stock`=`1`.
    required: false
    in: query
    type: integer
  FilterTotalSoldParam:
    name: total_sold
    description: |
      Filter items by total_sold.
    required: false
    in: query
    type: integer
  ProductFilterTypeParam:
    name: type
    description: 'Filter items by type: `physical` or `digital`.'
    required: false
    in: query
    type: string
    enum:
      - digital
      - physical
  FilterCategoriesParam:
    name: categories
    description: |-
      Filter items by categories.
       If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`.
    required: false
    in: query
    type: integer
  FilterKeywordParam:
    name: keyword
    description: 'Filter items by keywords. eg. new, towel, bath'
    required: false
    in: query
    type: string
  ProductFilterKeywordParam:
    name: keyword
    description: |
      Filter items by keywords found in the `name`, `description`, or `sku` fields, or in the brand name.
    required: false
    in: query
    type: string
  ProductFilterKeywordContextParam:
    name: keyword_context
    description: Set context for a product search.
    required: false
    in: query
    type: string
    enum:
      - shopper
      - merchant
  FilterStatusParam:
    name: status
    description: |
      Filter items by status.
    required: false
    in: query
    type: integer
  FilterIncludeParam:
    name: include
    description: 'Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page.'
    required: false
    in: query
    type: string
    enum:
      - variants
      - images
      - custom_fields
      - bulk_pricing_rules
      - primary_image
      - modifiers
      - options
  FilterIncludeFieldsParam:
    name: include_fields
    description: 'Fields to include, in a comma-separated list. The ID and the specified fields will be returned.'
    required: false
    in: query
    type: string
  FilterExcludeFieldsParam:
    name: exclude_fields
    description: 'Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.'
    required: false
    in: query
    type: string
  FilterParentIdParam:
    name: parent_id
    description: 'Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. '
    required: false
    in: query
    type: integer
  FilterPageTitleParam:
    name: page_title
    description: |
      Filter items by page_title.
    required: false
    in: query
    type: string
  FilterAvailabilityParam:
    name: availability
    description: |
      Filter items by availability. Values are: available, disabled, preorder.
    required: false
    in: query
    type: string
    enum:
      - available
      - disabled
      - preorder
  FilterPriceListIdParam:
    name: price_list_id
    description: |-
      This filter returns the product pricing with the *Price List* pricing instead. To use: 
      `?price_list_id=1`.
      If there are variants use:
      `?price_list_id=1&include=variants`
    required: false
    in: query
    type: integer
  FilterProductIdParam:
    type: string
    name: product_id
    in: query
    required: false
    description: |
      A comma-separated list of ids of `Product`s whose prices were requested.
  FilterVariantIdParam:
    type: integer
    name: variant_id
    in: query
    required: false
    description: |
      The ID of the `Variant` whose prices were requested.
  FilterCurrencyParam:
    name: currency
    description: |
      Filter items by currency.
    required: false
    in: query
    type: string
    format: ISO-4217
  PageParam:
    name: page
    description: Specifies the page number in a limited (paginated) list of products.
    required: false
    in: query
    type: integer
  LimitParam:
    name: limit
    description: Controls the number of items per page in a limited (paginated) list of products.
    required: false
    in: query
    type: integer
  DirectionParam:
    name: direction
    description: |
      Sort direction. Acceptable values are: `asc`, `desc`.
    required: false
    in: query
    type: string
    enum:
      - asc
      - desc
  ProductSortParam:
    name: sort
    description: |
      Field name to sort by.
    required: false
    in: query
    type: string
    enum:
      - id
      - name
      - sku
      - price
      - date_modified
      - date_last_imported
      - inventory_level
      - is_visible
      - total_sold
  ProductIdParam:
    name: product_id
    in: path
    description: |
      The ID of the `Product` to which the resource belongs.
    required: true
    type: integer
  ReviewIdParam:
    name: review_id
    description: |
      The ID of the `review` that is being operated on.
    required: true
    in: path
    type: integer
  ImageIdParam:
    name: image_id
    description: |
      The ID of the `Image` that is being operated on.
    required: true
    in: path
    type: integer
  VideoIdParam:
    name: video_id
    description: |
      The ID of the `Video` that is being operated on.
    required: true
    in: path
    type: string
  ComplexRuleIdParam:
    name: complex_rule_id
    description: |
      The ID of the `ComplexRule`.
    required: true
    in: path
    type: integer
  ConfigurableFieldIdParam:
    name: configurable_field_id
    description: |
      The ID of the `ConfigurableField`.
    required: true
    in: path
    type: integer
  CustomFieldIdParam:
    name: custom_field_id
    description: |
      The ID of the `CustomField`.
    required: true
    in: path
    type: integer
  BulkPricingRuleIdParam:
    name: bulk_pricing_rule_id
    description: |
      The ID of the `BulkPricingRule`.
    required: true
    in: path
    type: integer
  ModifierIdParam:
    name: modifier_id
    description: |
      The ID of the `Modifier`.
    required: true
    in: path
    type: integer
  ValueIdParam:
    name: value_id
    description: |
      The ID of the `Modifier/Option Value`.
    required: true
    in: path
    type: integer
  OptionIdParam:
    name: option_id
    description: |
      The ID of the `Option`.
    required: true
    in: path
    type: integer
  VariantIdParam:
    name: variant_id
    in: path
    description: |
      ID of the variant on a product, or on an associated Price List Record.
    required: true
    type: integer
  CategoryIdParam:
    name: category_id
    in: path
    description: |
      The ID of the `Category` to which the resource belongs.
    required: true
    type: integer
  BrandIdParam:
    name: brand_id
    in: path
    description: |
      The ID of the `Brand` to which the resource belongs.
    required: true
    type: integer
  MetafieldIdParam:
    name: metafield_id
    in: path
    description: |
      The ID of the `Metafield`.
    required: true
    type: integer
  MetafieldKeyParam:
    name: key
    in: query
    description: |
      Filter based on a metafield's key.
    required: false
    type: string
  MetafieldNamespaceParam:
    name: namespace
    in: query
    description: Filter based on a metafield's namespace.
    required: false
    type: string
  OrderIdParam:
    name: order_id
    in: path
    description: |
      The ID of the `Order` to which the transactions belong.
    required: true
    type: integer
  Accept:
    in: header
    type: string
    name: Accept
    default: application/json
    required: true
  Content-Type:
    name: Content-Type
    in: header
    type: string
    default: application/json
    required: true
  product_id:
    name: product_id
    in: query
    type: string
    description: |-
      A comma-separated list of ids of Products whose prices were requested. For example:
      `?product_id=:id`
      `?product_id:in=77,80,81`
definitions:
  ModifierBase:
    type: object
    description: Common Modifier properties.
    title: Modifier Base
    properties:
      type:
        type: string
        description: |
          BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.
        enum:
          - date
          - checkbox
          - file
          - text
          - multi_line_text
          - numbers_only_text
          - radio_buttons
          - rectangles
          - dropdown
          - product_list
          - product_list_with_images
          - swatch
        x-required:
          - post
      required:
        type: boolean
        description: |
          Whether or not this modifer is required or not at checkout. Required in a /POST.
        x-required:
          - post
      sort_order:
        type: integer
        description: The order the modifiers display on the product detail page.
      config:
        $ref: '#/definitions/OptionConfig'
      option_values:
        type: array
        items:
          $ref: '#/definitions/ModifierValue'
    required:
      - type
      - required
  Modifier:
    allOf:
      - $ref: '#/definitions/ModifierBase'
      - properties:
          id:
            type: integer
            description: |
              The unique numeric ID of the modifier; increments sequentially.
            example: 12
          product_id:
            type: integer
            description: |
              The unique numeric ID of the product to which the option belongs.
            example: 77
          name:
            type: string
            description: |
              The unique option name. Auto-generated from the display name, a timestamp, and the product ID.
            example: Add-a-$5-Donation1535039590-191
          display_name:
            type: string
            description: |
              The name of the option shown on the storefront.
            example: Donation
    title: Modifer
    description: Product Modifier
    type: object
  ModifierPost:
    description: The model for a POST to create a modifier on a product.
    allOf:
      - $ref: '#/definitions/ModifierBase'
      - properties:
          display_name:
            type: string
            description: |
              The name of the option shown on the storefront.
            x-required:
              - post
            example: Donation
        required:
          - display_name
    title: Modifier Post
    type: object
  ModifierPut:
    type: object
    description: The model for a PUT to update a modifier on a product.
    allOf:
      - $ref: '#/definitions/ModifierBase'
    title: Modifier Put
  ModifierValueBase:
    allOf:
      - $ref: '#/definitions/OptionValueBase'
      - properties:
          adjusters:
            type: object
            properties:
              price:
                $ref: '#/definitions/Adjuster'
              weight:
                $ref: '#/definitions/Adjuster'
              image_url:
                type: string
                description: |
                  The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. 
                example: 'https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2'
              purchasing_disabled:
                type: object
                properties:
                  status:
                    type: boolean
                    description: |
                      Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                  message:
                    type: string
                    description: |
                      The message displayed on the storefront when the purchasing disabled status is `true`.
    title: Modifier Value Base
    type: object
  ModifierValue:
    type: object
    allOf:
      - $ref: '#/definitions/ModifierValueBase'
      - type: object
        properties:
          id:
            type: integer
            description: |
              The unique numeric ID of the value; increments sequentially.
    title: Modifier Value
    description: 'Part of Modifier Value Response '
  ModifierValuePost:
    type: object
    description: The model for a POST to create a modifier value on a product.
    allOf:
      - $ref: '#/definitions/ModifierValueBase'
    title: Modifier Value Post
  ModifierValuePut:
    type: object
    description: The model for a PUT to update a modifier value on a product.
    allOf:
      - $ref: '#/definitions/ModifierValueBase'
      - type: object
        properties:
          id:
            type: integer
            description: |
              The unique numeric ID of the value; increments sequentially.
            x-required:
              - put
    title: Modifier Value Put
  OptionBase:
    type: object
    description: Common Option properties.
    title: Option Base
    properties:
      id:
        type: integer
        description: |
          The unique numerical ID of the option, increments sequentially.
        x-nullable: true
        example: 55
      product_id:
        type: integer
        description: |
          The unique numerical ID of the product to which the option belongs.
        x-required:
          - post
          - put
        example: 4
      display_name:
        type: string
        description: |
          The name of the option shown on the storefront.
        x-required:
          - post
          - put
        minLength: 1
        maxLength: 255
        example: Add-a-$5-Donation1535042499-187
      type:
        type: string
        description: |
          The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.
        enum:
          - radio_buttons
          - rectangles
          - dropdown
          - product_list
          - product_list_with_images
          - swatch
        x-required:
          - post
          - put
      config:
        $ref: '#/definitions/OptionConfig'
      sort_order:
        type: integer
        example: 1
        description: 'Order in which the option is displayed on the storefront. '
      option_values:
        type: array
        x-required:
          - post
          - put
        minItems: 1
        items:
          $ref: '#/definitions/OptionValue'
  Option:
    allOf:
      - $ref: '#/definitions/OptionBase'
      - properties:
          name:
            type: string
            description: |
              The unique option name, auto-generated from the display name, a timestamp, and the product ID.
            example: Add-a-$5-Donation1535042499-187
    title: Option
    type: object
  OptionPost:
    type: object
    description: The model for a POST to create options on a product.
    allOf:
      - $ref: '#/definitions/OptionBase'
    title: Option Post
  OptionPut:
    type: object
    description: The model for a PUT to update options on a product.
    allOf:
      - $ref: '#/definitions/OptionBase'
    title: Option Put
  CategoryTreeCollectionResponse:
    description: |
      Returns the categories tree, a nested lineage of the categories with parent->child relationship. The Category objects returned are simplified versions of the category objects returned in the rest of this API.
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/CategoryNode'
      meta:
        $ref: '#/definitions/CollectionMeta'
    title: Category Tree Collection Response
  CategoryNode:
    type: object
    description: Used to reflect parent <> child category relationships. Used by Category Tree.
    title: Category Node
    properties:
      id:
        type: integer
        description: |
          The unique numeric ID of the category; increments sequentially.
        example: 26
      parent_id:
        type: integer
        description: |
          The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
        example: 25
      name:
        type: string
        description: |
          The name displayed for the category. Name is unique with respect to the category's siblings.
        example: Bath
      is_visible:
        type: boolean
        description: |
          Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
        example: true
      url:
        type: string
        description: |
          The custom URL for the category on the storefront.
        example: /towels/bath-towels/
      children:
        type: array
        description: |
          The list of children of the category.
        items:
          $ref: '#/definitions/CategoryNode'
  CategoryBase:
    type: object
    description: Common Category object properties.
    title: Category
    properties:
      id:
        type: integer
        description: |-
          Unique ID of the *Category*. Increments sequentially.
          Read-Only. 
      parent_id:
        type: integer
        description: |-
          The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
          Required in a POST if creating a child category.
        x-required:
          - post
        example: 2
      name:
        type: string
        description: |-
          The name displayed for the category. Name is unique with respect to the category's siblings.
          Required in a POST.
        x-required:
          - post
        minLength: 1
        maxLength: 50
        example: Bath
      description:
        type: string
        description: |
          The product description, which can include HTML formatting.
        example: <p>We offer a wide variety of products perfect for relaxing</p>
      views:
        type: integer
        description: |
          Number of views the category has on the storefront.
        example: 1050
      sort_order:
        type: integer
        description: |
          Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
        minimum: -2147483648
        maximum: 2147483647
        example: 3
      page_title:
        type: string
        description: |
          Custom title for the category page. If not defined, the category name will be used as the meta title.
        minLength: 0
        maxLength: 255
        example: Bath
      search_keywords:
        type: string
        description: |
          A comma-separated list of keywords that can be used to locate the category when searching the store.
        minLength: 0
        maxLength: 255
      meta_keywords:
        type: array
        description: |
          Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
        items:
          type: string
      meta_description:
        type: string
        description: |
          Custom meta description for the category page. If not defined, the store's default meta description will be used.
        minLength: 0
        maxLength: 65535
      layout_file:
        type: string
        description: |
          A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.
        minLength: 0
        maxLength: 500
        example: category.html
      is_visible:
        type: boolean
        description: |
          Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
      default_product_sort:
        type: string
        description: |
          Determines how the products are sorted on category page load.
        enum:
          - use_store_settings
          - featured
          - newest
          - best_selling
          - alpha_asc
          - alpha_desc
          - avg_customer_review
          - price_asc
          - price_desc
      image_url:
        type: string
        description: |
          Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.
        x-url: true
        example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
      custom_url:
        $ref: '#/definitions/CustomUrlCategory'
    required:
      - parent_id
      - name
  BrandBase:
    type: object
    description: Common Brand properties.
    title: Brand
    properties:
      id:
        type: integer
        description: Unique ID of the *Brand*. Read-Only.
      name:
        type: string
        description: |-
          The name of the brand. Must be unique.
          Required in POST.
        x-required:
          - post
          - put
        minLength: 1
        maxLength: 255
        example: Common Good
      page_title:
        type: string
        description: |
          The title shown in the browser while viewing the brand.
        minLength: 0
        maxLength: 255
        example: Common Good
      meta_keywords:
        type: array
        description: |
          Comma-separated list of meta keywords to include in the HTML.
        example: 'modern, clean, contemporary'
        items:
          type: string
      meta_description:
        type: string
        description: |
          A meta description to include.
        minLength: 0
        maxLength: 65535
        example: Common Good is a modern brand.
      search_keywords:
        type: string
        description: |
          A comma-separated list of keywords that can be used to locate this brand.
        minLength: 0
        maxLength: 65535
        example: 'kitchen, laundry, cart, storage'
      image_url:
        type: string
        description: |
          Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.
        x-url: true
        example: 'https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png'
      custom_url:
        $ref: '#/definitions/CustomUrlBrand'
    required:
      - name
  VariantBase:
    type: object
    description: Common Variant properties.
    title: Variant Base
    properties:
      cost_price:
        type: number
        format: double
        description: The cost price of the variant. Not affected by Price List prices.
        x-nullable: true
        minimum: 0
      price:
        type: number
        format: double
        description: 'This variant''s base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product''s default price (set in the Product resource''s `price` field) will be used as the base price.'
        x-nullable: true
        minimum: 0
      sale_price:
        type: number
        format: double
        description: 'This variant''s sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product''s sale price (set in the Product resource''s `price` field) will be used as the sale price.'
        x-nullable: true
        minimum: 0
      retail_price:
        type: number
        format: double
        description: 'This variant''s retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product''s retail price (set in the Product resource''s `price` field) will be used as the retail price.'
        x-nullable: true
        minimum: 0
      weight:
        type: number
        format: double
        description: 'This variant''s base weight on the storefront. If this value is null, the product''s default weight (set in the Product resource''s weight field) will be used as the base weight.'
        x-nullable: true
        minimum: 0
      width:
        type: number
        format: double
        description: |
          Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.
        x-nullable: true
        minimum: 0
      height:
        type: number
        format: double
        description: |
          Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.
        x-nullable: true
        minimum: 0
      depth:
        type: number
        format: double
        description: |
          Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.
        x-nullable: true
        minimum: 0
      is_free_shipping:
        type: boolean
        description: |
          Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.
      fixed_cost_shipping_price:
        type: number
        format: double
        description: |
          A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
        x-nullable: true
        minimum: 0
      purchasing_disabled:
        type: boolean
        description: 'If `true`, this variant will not be purchasable on the storefront.'
      purchasing_disabled_message:
        type: string
        description: 'If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.'
        minLength: 0
        maxLength: 255
      image_url:
        type: string
        description: 'The image that will be displayed when this variant is selected on the storefront. When updating a SKU image, send the publicly accessible URL. Supported image formats are JPEG, PNG, and GIF. Generic product images not specific to the variant should be stored on the product. Limit of 8MB per file. '
        x-url: true
      upc:
        type: string
        description: The UPC code used in feeds for shopping comparison sites and external channel integrations.
        x-nullable: true
      inventory_level:
        type: integer
        description: 'Inventory level for the variant, which is used when the product''s inventory_tracking is set to `variant`.'
        x-nullable: true
      inventory_warning_level:
        type: integer
        description: 'When the variant hits this inventory level, it is considered low stock.'
        x-nullable: true
      bin_picking_number:
        type: string
        description: Identifies where in a warehouse the variant is located.
        x-nullable: true
        minLength: 0
        maxLength: 255
  Variant:
    type: object
    allOf:
      - $ref: '#/definitions/VariantBase'
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          sku:
            type: string
          sku_id:
            type: integer
            description: Read-only reference to v2 API's SKU ID. Null if it is a base variant.
            x-nullable: true
          option_values:
            type: string
            description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
          calculated_price:
            type: number
            format: double
            description: |
              The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.
  VariantPost:
    description: |
      The model for a POST to create variants on a product.
    allOf:
      - $ref: '#/definitions/VariantBase'
      - properties:
          product_id:
            type: integer
            x-required:
              - post
          sku:
            type: string
            x-required:
              - post
            minLength: 1
            maxLength: 255
          option_values:
            type: array
            description: Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.
            x-required:
              - post
            items:
              $ref: '#/definitions/OptionValueVariantPost'
    title: Variant Post
    type: object
  VariantPut:
    type: object
    description: |
      The model for a PUT to update variants on a product.
    allOf:
      - $ref: '#/definitions/VariantBase'
      - type: object
        properties:
          id:
            type: integer
            x-required:
              - put
    title: Variant Put
  VariantProductPut:
    type: object
    description: |
      The model for a PUT to update variants on a product.
    allOf:
      - $ref: '#/definitions/VariantBase'
      - type: object
        properties:
          product_id:
            type: integer
          sku:
            type: string
            minLength: 1
            maxLength: 255
    title: Variant Product Put
  OptionValueVariantPost:
    type: object
    description: The model for a POST to create option values on a variant.
    properties:
      id:
        type: integer
        x-required:
          - post
      option_id:
        type: integer
        x-required:
          - post
    title: Option Value Variant Post
  OptionValueResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/OptionValue'
      meta:
        $ref: '#/definitions/Meta'
    title: Option Value Response
  OptionValueBase:
    type: object
    description: Common Option Value properties.
    title: Option Value Base
    properties:
      is_default:
        type: boolean
        description: |
          The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.
        example: false
      label:
        type: string
        description: |
          The text display identifying the value on the storefront. Required in a /POST.
        x-required:
          - post
        example: Green
      sort_order:
        type: integer
        description: |
          The order in which the value will be displayed on the product page. Required in a /POST.
        minimum: -2147483648
        maximum: 2147483647
        x-required:
          - post
        example: 0
      value_data:
        type: object
        description: |
          Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.
    required:
      - label
      - sort_order
  OptionValue:
    type: object
    allOf:
      - $ref: '#/definitions/OptionValueBase'
      - type: object
        properties:
          id:
            type: integer
            description: |
              The unique numeric ID of the value; increments sequentially.
    title: Option Value
  OptionValuePost:
    type: object
    description: The model for a POST to create option values on a product.
    allOf:
      - $ref: '#/definitions/OptionValueBase'
    title: Option Value Post
  OptionValuePut:
    type: object
    description: The model for a PUT to update option values on a product.
    allOf:
      - $ref: '#/definitions/OptionValueBase'
      - type: object
        properties:
          id:
            type: integer
            description: |
              The unique numeric ID of the value; increments sequentially.
            x-required:
              - put
    title: Option Value Put
  ProductImageBase:
    type: object
    description: Common ProductImage properties.
    properties:
      id:
        description: |
          The unique numeric ID of the image; increments sequentially.
        type: integer
      product_id:
        description: |
          The unique numeric identifier for the product with which the image is associated.
        type: integer
      image_file:
        description: |
          The local path to the original image file uploaded to BigCommerce.
        type: string
      url_zoom:
        description: |
          The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
        type: string
      url_standard:
        description: |
          The standard URL for this image. By default, this is used for product-page images.
        type: string
      url_thumbnail:
        description: |
          The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
        type: string
      url_tiny:
        description: |
          The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
        type: string
      date_modified:
        format: date-time
        description: |
          The date on which the product image was modified.
        type: string
      is_thumbnail:
        description: |
          Flag for identifying whether the image is used as the product's thumbnail.
        type: boolean
      sort_order:
        type: integer
        description: |
          The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.
        minimum: -2147483648
        maximum: 2147483647
      description:
        description: |
          The description for the image.
        type: string
    title: Product Image Base
  ProductImagePost:
    description: The model for a POST to create an image on a product.
    allOf:
      - $ref: '#/definitions/ProductImageBase'
      - properties:
          image_url:
            description: |
              Must be a fully qualified URL path, including protocol. Limit of 8MB per file. 
            type: string
          image_file:
            description: |
              Must be sent as a multipart/form-data field in the request body.
            type: string
    title: Product Image Post
    type: object
  ProductImagePut:
    type: object
    description: The model for a PUT to update applicable Product Image fields.
    allOf:
      - $ref: '#/definitions/ProductImageBase'
    title: Product Image Put
  ProductVideoBase:
    type: object
    description: Common ProductVideo properties.
    properties:
      title:
        type: string
        description: |
          The title for the video. If left blank, this will be filled in according to data on a host site.
        minLength: 0
        maxLength: 255
      description:
        type: string
        description: |
          The description for the video. If left blank, this will be filled in according to data on a host site.
      sort_order:
        type: integer
        description: |
          The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.
        minimum: -2147483648
        maximum: 2147483647
      type:
        type: string
        description: |
          The video type (a short name of a host site).
        enum:
          - youtube
    title: Product Video Base
  ProductVideo:
    type: object
    description: |
      A product video model.
    allOf:
      - $ref: '#/definitions/ProductVideoBase'
      - type: object
        properties:
          id:
            type: integer
            description: |
              The unique numeric ID of the product video; increments sequentially.
          video_id:
            description: |
              The ID of the video on a host site.
            type: string
          product_id:
            description: |
              The unique numeric identifier for the product with which the image is associated.
            type: integer
          length:
            description: |
              Length of the video. This will be filled in according to data on a host site.
            type: string
    title: Product Video
  ProductVideoPost:
    type: object
    description: |
      The model for a POST to create a video on a product.
    allOf:
      - $ref: '#/definitions/ProductVideoBase'
      - type: object
        properties:
          video_id:
            type: string
            description: |
              The ID of the video on a host site.
            x-required:
              - post
            minLength: 0
            maxLength: 25
    title: Product Video Post
  ProductVideoPut:
    type: object
    description: |
      The model for a PUT to update a video on a product.
    allOf:
      - $ref: '#/definitions/ProductVideoBase'
      - type: object
        properties:
          id:
            type: integer
            description: |
              The unique numeric ID of the product video; increments sequentially.
            x-required:
              - put
    title: Product Video Put
  ProductReviewBase:
    type: object
    title: Product Review Base
    properties:
      title:
        type: string
        description: |-
          The title for the product review.
          Required in /POST.
        minLength: 0
        maxLength: 255
      text:
        type: string
        description: |
          The text for the product review.
      status:
        type: string
        description: |
          The status of the product review. Must be one of `approved`, `disapproved` or `pending`.
      rating:
        type: integer
        description: 'The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5.'
      email:
        type: string
        description: 'The email of the reviewer. Must be a valid email, or an empty string.'
      name:
        type: string
        description: The name of the reviewer.
        minLength: 0
        maxLength: 255
      date_reviewed:
        type: string
        format: date-time
        description: |
          Date the product was reviewed. Required in /POST.
    required:
      - title
      - date_reviewed
  ProductReview:
    type: object
    description: |
      A product review model.
    allOf:
      - $ref: '#/definitions/ProductReviewBase'
      - type: object
        properties:
          id:
            description: |
              The unique numeric ID of the product review; increments sequentially.
            type: integer
          product_id:
            description: |
              The unique numeric identifier for the product with which the review is associated.
            type: integer
          date_created:
            type: string
            format: date-time
            description: |
              Date the product review was created.
          date_modified:
            type: string
            format: date-time
            description: |
              Date the product review was modified.
    title: Product Review
  ProductReviewPost:
    description: |
      The model for a POST to create a product review.
    allOf:
      - $ref: '#/definitions/ProductReviewBase'
    type: object
    title: Product Review Post
  ProductReviewPut:
    type: object
    description: |
      The model for a PUT to update a product review.
    allOf:
      - $ref: '#/definitions/ProductReviewBase'
    title: Product Review Put
  ImageResponse:
    description: |-
      Image Response returns for:
      * Create Variant Image
      * Create Modifier Image
      * Create Category Image
      * Create Brand Image
    type: object
    properties:
      data:
        $ref: '#/definitions/ResourceImage'
      meta:
        $ref: '#/definitions/Meta'
    title: Image Response
  ResourceImage:
    type: object
    description: 'An object containing a publicly accessible image URL, or a form post that contains an image file.'
    title: Resource Image
    properties:
      image_url:
        type: string
        description: |
          A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file. 
  ProductPost:
    $ref: '#/definitions/Product'
  ProductPut:
    description: The model for a PUT to update a product.
    allOf:
      - $ref: '#/definitions/Product'
      - properties:
          id:
            type: integer
            description: |
              The unique numerical ID of the product; increments sequentially.
            x-required:
              - put
          custom_fields:
            type: array
            items:
              $ref: '#/definitions/CustomFieldBase'
          bulk_pricing_rules:
            type: array
            items:
              $ref: '#/definitions/BulkPricingRuleBase'
          variants:
            type: array
            items:
              $ref: '#/definitions/VariantProductPut'
    title: Product Put
    type: object
  CatalogSummary:
    type: object
    description: Catalog Summary object describes a lightweight summary of the catalog.
    title: Catalog Summary
    properties:
      inventory_count:
        type: integer
        description: |
          A count of all inventory items in the catalog.
        example: 2000
      inventory_value:
        type: number
        format: double
        description: |
          Total value of store's inventory.
        example: 267000
      primary_category_id:
        type: integer
        description: |
          ID of the category containing the most products.
        example: 23
      primary_category_name:
        type: string
        description: |
          Name of the category containing the most products.
        example: Shop All
      variant_count:
        type: integer
        description: Total number of variants
        example: 46
      highest_variant_price:
        type: number
        format: double
        description: Highest priced variant
        example: 249
      average_variant_price:
        type: number
        format: double
        example: 83.07978261
        description: Average price of all variants
      lowest_variant_price:
        type: string
        example: '7'
        description: Lowest priced variant in the store
      oldest_variant_date:
        type: string
        example: '2018-08-15'
      newest_variant_date:
        type: string
        example: '2018-08-16'
  MetafieldBase:
    type: object
    description: Common Metafield properties.
    title: Metafield
    properties:
      id:
        type: integer
        description: Unique ID of the *Metafield*. Read-Only.
        example: 6
      permission_set:
        type: string
        description: |
          Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.
        enum:
          - app_only
          - read
          - write
        x-required:
          - post
      namespace:
        type: string
        description: |
          Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.
        x-required:
          - post
        minLength: 1
        maxLength: 64
        example: Warehouse Locations
      key:
        type: string
        description: |
          The name of the field, for example: `location_id`, `color`. Required for POST.
        x-required:
          - post
        minLength: 1
        maxLength: 64
        example: Location
      value:
        type: string
        description: |
          The value of the field, for example: `1`, `blue`. Required for POST.
        x-required:
          - post
        minLength: 1
        maxLength: 65535
        example: 4HG
      description:
        type: string
        description: |
          Description for the metafields.
        minLength: 0
        maxLength: 255
        example: Location in the warehouse
      resource_type:
        type: string
        description: |
          The type of resource with which the metafield is associated.
        enum:
          - category
          - brand
          - product
          - variant
        x-required:
          - post
        example: product
      resource_id:
        type: integer
        description: |
          The ID for the resource with which the metafield is associated.
        x-required:
          - post
        minimum: 0
        maximum: 10000000000
        example: 111
      created_at:
        type: string
        format: date-time
        description: |
          Date and time of the metafield's creation. Read-Only.
        example: '2018-05-07T20:14:17+00:00'
      updated_at:
        type: string
        format: date-time
        description: |
          Date and time when the metafield was last updated. Read-Only.
        example: '2018-05-07T20:14:17+00:00'
    required:
      - permission_set
      - namespace
      - key
      - value
  ComplexRuleBase:
    type: object
    description: Common ComplexRule properties.
    title: Complex Rule
    properties:
      id:
        type: integer
        description: |-
          The unique numeric ID of the rule; increments sequentially.
          Read-Only
        example: 5
      product_id:
        type: integer
        description: |
          The unique numeric ID of the product with which the rule is associated; increments sequentially.
        x-nullable: true
        x-required:
          - post
          - put
        example: 67
      sort_order:
        type: integer
        description: |
          The priority to give this rule when making adjustments to the product properties.
        minimum: -2147483648
        maximum: 2147483647
        example: 0
      enabled:
        type: boolean
        description: |
          Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.
        example: true
      stop:
        type: boolean
        description: |
          Flag for determining whether other rules should not be applied after this rule has been applied.
      purchasing_disabled:
        type: boolean
        description: |
          Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.
      purchasing_disabled_message:
        type: string
        description: |
          Message displayed on the storefront when a rule disables the purchasing of a product.
        minLength: 0
        maxLength: 255
        example: This product is not available at this time.
      purchasing_hidden:
        type: boolean
        description: |
          Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.
      image_url:
        type: string
        description: |
          The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file. 
        example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
      price_adjuster:
        $ref: '#/definitions/Adjuster'
      weight_adjuster:
        $ref: '#/definitions/Adjuster'
      conditions:
        type: array
        items:
          $ref: '#/definitions/ComplexRuleConditionBase'
  CustomFieldBase:
    type: object
    description: 'Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product''s page, such as a book''s ISBN or a DVD''s release date.'
    title: Custom Field
    properties:
      id:
        type: integer
        description: |-
          The unique numeric ID of the custom field; increments sequentially.
          Read-Only
        minimum: 1
        example: 6
      name:
        type: string
        description: |
          The name of the field, shown on the storefront, orders, etc. Required for /POST
        x-required:
          - post
        minLength: 1
        maxLength: 250
        example: ISBN
      value:
        type: string
        description: |
          The name of the field, shown on the storefront, orders, etc. Required for /POST
        x-required:
          - post
        minLength: 1
        maxLength: 250
        example: '1234567890123'
    required:
      - name
      - value
  ComplexRuleConditionBase:
    type: object
    description: 'Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`''s, or else reference a `modifier_value_id` and a `variant_id`.'
    title: Complex Rule Condition
    properties:
      id:
        type: integer
        description: |
          The unique numeric ID of the rule condition; increments sequentially. Read-Only
        x-nullable: true
        example: 3
      rule_id:
        type: integer
        description: |-
          The unique numeric ID of the rule with which the condition is associated.
          Read-Only
        x-nullable: true
        example: 4
      modifier_id:
        type: integer
        description: |-
          The unique numeric ID of the modifier with which the rule condition is associated.
          Required in /POST.
        x-nullable: true
        example: 55
      modifier_value_id:
        type: integer
        description: |-
          The unique numeric ID of the modifier value with which the rule condition is associated.
          Required in /POST.
        x-nullable: true
        example: 256
      variant_id:
        type: integer
        description: |-
          The unique numeric ID of the variant with which the rule condition is associated.
          Required in /POST.
        x-nullable: true
        example: 1
      combination_id:
        type: integer
        description: |
          (READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.
    required:
      - modifier_id
      - modifier_value_id
      - variant_id
  CustomUrlProduct:
    type: object
    description: The custom URL for the product on the storefront.
    title: Custom Url Product
    properties:
      url:
        type: string
        description: |
          Product URL on the storefront.
        x-url: true
        example: /red-large-shirt
      is_customized:
        type: boolean
        description: |
          Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
  CustomUrlBrand:
    type: object
    description: The custom URL for the brand on the storefront.
    title: Custom Url Brand
    properties:
      url:
        type: string
        description: |
          Brand URL on the storefront.
        x-url: true
        example: /shoes
      is_customized:
        type: boolean
        description: |
          Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
        example: true
  CustomUrlCategory:
    type: object
    description: The custom URL for the category on the storefront.
    title: Custom Url Category
    properties:
      url:
        type: string
        description: |
          Category URL on the storefront.
        x-required:
          - post
          - put
        x-url: true
        minLength: 0
        maxLength: 255
        example: /shoes
      is_customized:
        type: boolean
        description: |
          Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).
        x-required:
          - post
          - put
  BulkPricingRuleBase:
    type: object
    description: Common BulkPricingRule properties
    title: Bulk Pricing Rule
    properties:
      id:
        type: integer
        description: Unique ID of the *Bulk Pricing Rule*. Read-Only.
      quantity_min:
        type: integer
        description: |
          The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.
          Required in /POST.
        x-required:
          - post
        minimum: 0
        example: 10
      quantity_max:
        type: integer
        description: |-
          The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.
          Required in /POST.
        x-required:
          - post
        minimum: 0
        example: 50
      type:
        type: string
        description: |-
          The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.
          Required in /POST.
        x-required:
          - post
        enum:
          - price
          - percent
          - fixed
        example: price
      amount:
        description: |-
          The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. 
          Required in /POST.
        format: float
        example: '".10"'
        type: string
    required:
      - quantity_min
      - quantity_max
      - type
      - amount
  OptionConfig:
    type: object
    title: Option Config
    description: The values for option config can vary based on the Modifier created.
    properties:
      default_value:
        type: string
        description: |
          (date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.
      checked_by_default:
        type: boolean
        description: |
          (checkbox) Flag for setting the checkbox to be checked by default.
      checkbox_label:
        type: string
        description: |
          (checkbox) Label displayed for the checkbox option.
      date_limited:
        type: boolean
        description: |
          (date) Flag to limit the dates allowed to be entered on a date option.
      date_limit_mode:
        type: string
        description: |
          (date) The type of limit that is allowed to be entered on a date option.
        enum:
          - earliest
          - range
          - latest
        example: range
      date_earliest_value:
        type: string
        format: date
        description: |
          (date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.
        example: '2018-08-31T05:00:00+00:00'
      date_latest_value:
        type: string
        format: date
        description: |
          (date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.
        example: '2019-01-01T05:00:00+00:00'
      file_types_mode:
        type: string
        description: |
          (file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.
        enum:
          - specific
          - all
        example: specific
      file_types_supported:
        type: array
        description: |
          (file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:
            `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).
            `other` - Allows file types defined in the `file_types_other` array.
        example: 'images, documents, other'
        items:
          type: string
      file_types_other:
        type: array
        description: |
          (file) A list of other file types allowed with the file upload option.
        example: pdf
        items:
          type: string
      file_max_size:
        type: integer
        description: |
          (file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.
        example: 5
      text_characters_limited:
        type: boolean
        description: |
          (text, multi_line_text) Flag to validate the length of a text or multi-line text input.
      text_min_length:
        type: integer
        description: |
          (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
        example: 1
      text_max_length:
        type: integer
        description: |
          (text, multi_line_text) The maximum length allowed for a text or multi line text option.
        example: 55
      text_lines_limited:
        type: boolean
        description: |
          (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
        example: true
      text_max_lines:
        type: integer
        description: |
          (multi_line_text) The maximum number of lines allowed on a multi-line text input.
        example: 4
      number_limited:
        type: boolean
        description: |
          (numbers_only_text) Flag to limit the value of a number option.
        example: true
      number_limit_mode:
        type: string
        description: |
          (numbers_only_text) The type of limit on values entered for a number option.
        enum:
          - lowest
          - highest
          - range
        example: lowest
      number_lowest_value:
        type: number
        description: |
          (numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.
        example: 100
      number_highest_value:
        type: number
        description: |
          (numbers_only_text) The highest allowed value for a number option if `number_limited` is true.
      number_integers_only:
        type: boolean
        description: |
          (numbers_only_text) Flag to limit the input on a number option to whole numbers only.
        example: false
      product_list_adjusts_inventory:
        type: boolean
        description: |
          (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
      product_list_adjusts_pricing:
        type: boolean
        description: |
          (product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.
      product_list_shipping_calc:
        type: string
        description: |
          (product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.
        enum:
          - none
          - weight
          - package
        example: weight
  Adjuster:
    type: object
    title: Adjuster
    properties:
      adjuster:
        type: string
        description: |
          The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.
        enum:
          - relative
          - percentage
        x-nullable: true
      adjuster_value:
        type: number
        description: |
          The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.
        example: 5
    description: Adjuster for Complex Rules.
  CollectionMeta:
    type: object
    description: 'Data about the response, including pagination and collection totals.'
    properties:
      pagination:
        $ref: '#/definitions/Pagination'
    title: Collection Meta
  Pagination:
    type: object
    description: 'Data about the response, including pagination and collection totals.'
    title: Pagination
    properties:
      total:
        type: integer
        description: |
          Total number of items in the result set.
        example: 36
      count:
        type: integer
        description: |
          Total number of items in the collection response.
        example: 36
      per_page:
        type: integer
        description: |
          The amount of items returned in the collection per page, controlled by the limit parameter.
        example: 50
      current_page:
        type: integer
        description: |
          The page you are currently on within the collection.
        example: 1
      total_pages:
        type: integer
        description: |
          The total number of pages in the collection.
        example: 1
      links:
        type: object
        description: |
          Pagination links for the previous and next parts of the whole collection.
        properties:
          previous:
            type: string
            description: |
              Link to the previous page returned in the response.
          current:
            type: string
            description: |
              Link to the current page returned in the response.
            example: '?page=1&limit=50'
          next:
            type: string
            description: |
              Link to the next page returned in the response.
  Meta:
    type: object
    description: Empty meta object; may be used later.
    title: Meta
  ErrorResponse:
    allOf:
      - $ref: '#/definitions/BaseError'
      - type: object
        properties:
          errors:
            $ref: '#/definitions/DetailedErrors'
    title: Error Response
  BaseError:
    type: object
    description: |
      Error payload for the BigCommerce API.
    properties:
      status:
        description: |
          The HTTP status code.
        type: integer
      title:
        description: |
          The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
    title: Base Error
  NotFound:
    description: Error payload for the BigCommerce API.
    type: object
    properties:
      status:
        description: |
          404 HTTP status code.
        type: integer
      title:
        description: The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
    title: Not Found


  DetailedErrors:
    type: object
    title: Detailed Errors
    properties:
      additionalProperties:
        type: string
  Product:
    type: object
    description: Common Product properties.
    title: Product
    properties:
      name:
        type: string
        description: |
          The product name.
        x-required:
          - post
        minLength: 1
        maxLength: 255
        example: Smith Journal 13
      type:
        type: string
        description: |
          The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.
        x-required:
          - post
        enum:
          - physical
          - digital
        example: physical
      sku:
        type: string
        description: |
          User defined product code/stock keeping unit (SKU).
        minLength: 0
        maxLength: 255
        example: SM-13
      description:
        type: string
        description: |
          The product description, which can include HTML formatting.
        example: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
      weight:
        type: number
        description: |
          Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store
        format: float
        minimum: 0
        maximum: 9999999999
      width:
        type: number
        description: |
          Width of the product, which can be used when calculating shipping costs.
        format: float
        minimum: 0
        maximum: 9999999999
      depth:
        type: number
        description: |
          Depth of the product, which can be used when calculating shipping costs.
        format: float
        minimum: 0
        maximum: 9999999999
      height:
        type: number
        description: |
          Height of the product, which can be used when calculating shipping costs.
        format: float
        minimum: 0
        maximum: 9999999999
      price:
        type: number
        description: |
          The price of the product. The price should include or exclude tax, based on the store settings.
        format: float
        minimum: 0
      cost_price:
        type: number
        description: |
          The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.
        format: float
        minimum: 0
      retail_price:
        type: number
        description: |
          The retail cost of the product. If entered, the retail cost price will be shown on the product page.
        format: float
        minimum: 0
      sale_price:
        type: number
        description: |
          If entered, the sale price will be used instead of value in the price field when calculating the product's cost.
        format: float
        minimum: 0
      tax_class_id:
        type: integer
        description: |
          The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)
        minimum: 0
        maximum: 1000000000
      product_tax_code:
        type: string
        description: |
          Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.
        minLength: 0
        maxLength: 255
      categories:
        type: array
        description: |
          An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.
        x-required:
          - post
        items:
          type: integer
      brand_id:
        type: integer
        description: |
          A product can be added to an existing brand during a product /PUT or /POST.
        minimum: 0
        maximum: 1000000000
      inventory_level:
        type: integer
        description: |
          Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.
        minimum: 0
        maximum: 1000000000
      inventory_warning_level:
        type: integer
        description: |
          Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.
        minimum: 0
        maximum: 1000000000
      inventory_tracking:
        type: string
        description: |
          The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.
        enum:
          - none
          - product
          - variant
      fixed_cost_shipping_price:
        type: number
        description: |
          A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.
        format: float
        minimum: 0
      is_free_shipping:
        type: boolean
        description: |
          Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.
      is_visible:
        type: boolean
        description: |
          Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.
      is_featured:
        type: boolean
        description: |
          Flag to determine whether the product should be included in the `featured products` panel when viewing the store.
      related_products:
        type: array
        description: |
          An array of IDs for the related products.
        items:
          type: integer
      warranty:
        type: string
        description: |
          Warranty information displayed on the product page. Can include HTML formatting.
        minLength: 0
        maxLength: 65535
      bin_picking_number:
        type: string
        description: |
          The BIN picking number for the product.
        minLength: 0
        maxLength: 255
      layout_file:
        type: string
        description: |
          The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.
        minLength: 0
        maxLength: 500
      upc:
        type: string
        description: |
          The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.
        minLength: 0
        maxLength: 255
      search_keywords:
        type: string
        description: |
          A comma-separated list of keywords that can be used to locate the product when searching the store.
        minLength: 0
        maxLength: 65535
      availability:
        type: string
        enum:
          - available
          - disabled
          - preorder
        description: |
          Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.
      availability_description:
        type: string
        description: |
          Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'
        minLength: 0
        maxLength: 255
      gift_wrapping_options_type:
        type: string
        enum:
          - any
          - none
          - list
        description: |
          Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.
      gift_wrapping_options_list:
        type: array
        description: |
          A list of gift-wrapping option IDs.
        items:
          type: integer
      sort_order:
        type: integer
        description: |
          Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.
        minimum: -2147483648
        maximum: 2147483647
      condition:
        type: string
        description: |
          The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.
        enum:
          - New
          - Used
          - Refurbished
      is_condition_shown:
        type: boolean
        description: |
          Flag used to determine whether the product condition is shown to the customer on the product page.
      order_quantity_minimum:
        type: integer
        description: |
          The minimum quantity an order must contain, to be eligible to purchase this product.
        minimum: 0
        maximum: 1000000000
      order_quantity_maximum:
        type: integer
        description: |
          The maximum quantity an order can contain when purchasing the product.
        minimum: 0
        maximum: 1000000000
      page_title:
        type: string
        description: |
          Custom title for the product page. If not defined, the product name will be used as the meta title.
        minLength: 0
        maxLength: 255
      meta_keywords:
        type: array
        description: |
          Custom meta keywords for the product page. If not defined, the store's default keywords will be used.
        items:
          type: string
      meta_description:
        type: string
        description: |
          Custom meta description for the product page. If not defined, the store's default meta description will be used.
        minLength: 0
        maxLength: 65535
      view_count:
        type: integer
        description: |
          The number of times the product has been viewed.
        minimum: 0
        maximum: 1000000000
      preorder_release_date:
        type: string
        format: date-time
        description: |
          Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.
        x-nullable: true
      preorder_message:
        type: string
        description: |
          Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.
        minLength: 0
        maxLength: 255
      is_preorder_only:
        type: boolean
        description: |
          If set to true then on the preorder release date the preorder status will automatically be removed.  
          If set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the
          control panel or using the API. Using the API set `availability` to `available`.
      is_price_hidden:
        type: boolean
        description: |
          False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)
      price_hidden_label:
        type: string
        description: |
          By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)
        minLength: 0
        maxLength: 200
      custom_url:
        $ref: '#/definitions/CustomUrlProduct'
      open_graph_type:
        type: string
        description: |
          Type of product, defaults to `product`.
        enum:
          - product
          - album
          - book
          - drink
          - food
          - game
          - movie
          - song
          - tv_show
      open_graph_title:
        type: string
        description: |
          Title of the product, if not specified the product name will be used instead.
      open_graph_description:
        type: string
        description: |
          Description to use for the product, if not specified then the meta_description will be used instead.
      open_graph_use_meta_description:
        type: boolean
        description: |
          Flag to determine if product description or open graph description is used.
      open_graph_use_product_name:
        type: boolean
        description: |
          Flag to determine if product name or open graph name is used.
      open_graph_use_image:
        type: boolean
        description: |
          Flag to determine if product image or open graph image is used.
      brand_name or brand_id:
        type: string
        example: Common Good
        description: The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. "Common Good" and "Common good" are the same. Brand name does not return as part of a product response. Only the `brand_id`.
      gtin:
        type: string
        description: Global Trade Item Number
      mpn:
        type: string
        description: Manufacturer Part Number
      calculated_price:
        type: number
        description: |
          The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.
        format: float
      reviews_rating_sum:
        type: integer
        description: |
          The total rating for the product.
        example: 3.2
      reviews_count:
        type: integer
        description: |
          The number of times the product has been rated.
        example: 4
      total_sold:
        type: integer
        description: |
          The total quantity of this product sold.
        example: 80
      custom_fields:
        type: array
        items:
          $ref: '#/definitions/CustomFieldBase'
      bulk_pricing_rules:
        type: array
        items:
          $ref: '#/definitions/BulkPricingRuleBase'
      date_created:
        type: string
        format: date-time
        description: |
          The date on which the product was created.
        example: '2018-08-15T14:49:05+00:00'
      date_modified:
        type: string
        format: date-time
        description: |
          The date on which the product was modified.
        example: '2018-08-24T14:41:00+00:00'
      images:
        type: array
        items:
          $ref: '#/definitions/ProductImage'
      videos:
        type: array
        items:
          $ref: '#/definitions/ProductVideo'
      variants:
        type: array
        items:
          $ref: '#/definitions/Variant'
      base_variant_id:
        type: integer
        description: The unique identifier of the base variant associated with a simple product. This value is null for complex products.
        example: 363
  ProductImage:
    title: Product Image
    allOf:
      - $ref: '#/definitions/ProductImageBase'
      - type: object
        properties:
          id:
            description: |
              The unique numeric ID of the image; increments sequentially.
            type: integer
          product_id:
            description: |
              The unique numeric identifier for the product with which the image is associated.
            type: integer
          image_file:
            description: |
              The local path to the original image file uploaded to BigCommerce.
            type: string
          url_zoom:
            description: |
              The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.
            type: string
          url_standard:
            description: |
              The standard URL for this image. By default, this is used for product-page images.
            type: string
          url_thumbnail:
            description: |
              The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.
            type: string
          url_tiny:
            description: |
              The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.
            type: string
          date_modified:
            format: date-time
            description: |
              The date on which the product image was modified.
            type: string
  MetafieldPost:
    type: object
    allOf:
      - $ref: '#/definitions/MetafieldBase'
    title: Metafield Post
securityDefinitions:
  X-Auth-Client:
    type: apiKey
    name: X-Auth-Client
    in: header
  X-Auth-Token:
    type: apiKey
    name: X-Auth-Token
    in: header
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
responses:
  ProductCollectionResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/Product'
        meta:
          $ref: '#/definitions/CollectionMeta'
    examples:
      application/json:
        data:
          - id: 174
            name: 1L Le Parfait Jar
            type: physical
            sku: ''
            description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
            weight: 1
            width: 0
            depth: 0
            height: 0
            price: 7.95
            cost_price: 0
            retail_price: 10
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: ''
            calculated_price: 7.95
            categories:
              - 23
              - 21
            brand_id: 36
            option_set_id: null
            option_set_display: right
            inventory_level: 0
            inventory_warning_level: 0
            inventory_tracking: none
            reviews_rating_sum: 0
            reviews_count: 0
            total_sold: 7
            fixed_cost_shipping_price: 0
            is_free_shipping: false
            is_visible: true
            is_featured: false
            related_products:
              - -1
            warranty: ''
            bin_picking_number: ''
            layout_file: product.html
            upc: ''
            mpn: ''
            gtin: ''
            search_keywords: 'jar, glass'
            availability: available
            availability_description: ''
            gift_wrapping_options_type: any
            gift_wrapping_options_list: []
            sort_order: 0
            condition: New
            is_condition_shown: false
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: ''
            meta_keywords: []
            meta_description: ''
            date_created: '2018-08-15T14:48:46+00:00'
            date_modified: '2018-09-05T20:42:07+00:00'
            view_count: 10
            preorder_release_date: null
            preorder_message: ''
            is_preorder_only: false
            is_price_hidden: false
            price_hidden_label: ''
            custom_url:
              url: /all/1l-le-parfait-jar/
              is_customized: true
            base_variant_id: 345
            open_graph_type: product
            open_graph_title: ''
            open_graph_description: ''
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            variants:
              - id: 345
                product_id: 174
                sku: ''
                sku_id: null
                price: 7.95
                calculated_price: 7.95
                sale_price: 0
                retail_price: 10
                map_price: 0
                weight: 1
                width: 0
                height: 0
                depth: 0
                is_free_shipping: false
                fixed_cost_shipping_price: 0
                calculated_weight: 1
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: 'https://cdn8.bigcommerce.com/s-jrah6gmn/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.560.850.jpg?c=2'
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values: []
          - id: 167
            name: Able Brewing System
            type: physical
            sku: ''
            description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
            weight: 1
            width: 0
            depth: 0
            height: 0
            price: 225
            cost_price: 0
            retail_price: 0
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: ''
            calculated_price: 225
            categories:
              - 23
              - 21
            brand_id: 43
            option_set_id: 52
            option_set_display: right
            inventory_level: 0
            inventory_warning_level: 0
            inventory_tracking: none
            reviews_rating_sum: 0
            reviews_count: 0
            total_sold: 2
            fixed_cost_shipping_price: 0
            is_free_shipping: false
            is_visible: true
            is_featured: false
            related_products:
              - -1
            warranty: ''
            bin_picking_number: ''
            layout_file: product.html
            upc: ''
            mpn: ''
            gtin: ''
            search_keywords: ''
            availability: available
            availability_description: ''
            gift_wrapping_options_type: any
            gift_wrapping_options_list: []
            sort_order: 0
            condition: New
            is_condition_shown: false
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: ''
            meta_keywords: []
            meta_description: ''
            date_created: '2018-08-15T14:48:36+00:00'
            date_modified: '2018-08-20T15:11:17+00:00'
            view_count: 21
            preorder_release_date: null
            preorder_message: ''
            is_preorder_only: false
            is_price_hidden: false
            price_hidden_label: ''
            custom_url:
              url: /all/able-brewing-system/
              is_customized: true
            base_variant_id: 338
            open_graph_type: product
            open_graph_title: ''
            open_graph_description: ''
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            variants:
              - id: 338
                product_id: 167
                sku: ''
                sku_id: null
                price: 225
                calculated_price: 225
                sale_price: 0
                retail_price: 0
                map_price: 0
                weight: 1
                width: 0
                height: 0
                depth: 0
                is_free_shipping: false
                fixed_cost_shipping_price: 0
                calculated_weight: 1
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: 'https://cdn8.bigcommerce.com/s-jrah6gmn/products/167/images/398/ablebrewingsystem4_1024x1024__07155__93974.1534344516.560.850.jpg?c=2'
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values: []
          - id: 181
            name: All Purpose Cleaner
            type: physical
            sku: ''
            description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
            weight: 1
            width: 0
            depth: 0
            height: 0
            price: 15
            cost_price: 0
            retail_price: 0
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: ''
            calculated_price: 15
            categories:
              - 21
              - 22
            brand_id: 37
            option_set_id: null
            option_set_display: right
            inventory_level: 0
            inventory_warning_level: 0
            inventory_tracking: none
            reviews_rating_sum: 0
            reviews_count: 0
            total_sold: 0
            fixed_cost_shipping_price: 0
            is_free_shipping: false
            is_visible: true
            is_featured: false
            related_products:
              - -1
            warranty: ''
            bin_picking_number: ''
            layout_file: product.html
            upc: ''
            mpn: ''
            gtin: ''
            search_keywords: ''
            availability: available
            availability_description: ''
            gift_wrapping_options_type: any
            gift_wrapping_options_list: []
            sort_order: 0
            condition: New
            is_condition_shown: false
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: ''
            meta_keywords: []
            meta_description: ''
            date_created: '2018-08-15T14:48:51+00:00'
            date_modified: '2018-08-15T15:01:15+00:00'
            view_count: 0
            preorder_release_date: null
            preorder_message: ''
            is_preorder_only: false
            is_price_hidden: false
            price_hidden_label: ''
            custom_url:
              url: /all/all-purpose-cleaner/
              is_customized: true
            base_variant_id: 352
            open_graph_type: product
            open_graph_title: ''
            open_graph_description: ''
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            variants:
              - id: 352
                product_id: 181
                sku: ''
                sku_id: null
                price: 15
                calculated_price: 15
                sale_price: 0
                retail_price: 0
                map_price: 0
                weight: 1
                width: 0
                height: 0
                depth: 0
                is_free_shipping: false
                fixed_cost_shipping_price: 0
                calculated_weight: 1
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: 'https://cdn8.bigcommerce.com/s-jrah6gmn/products/181/images/442/CommonGoodAllPurposeCleaner_d37aa1e8_e16f_4309_bddd_8fae0d94efc7_1024x1024__40180__66527.1534344531.560.850.jpg?c=2'
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values: []
          - id: 193
            name: BigCommerce Coffee Mug
            type: physical
            sku: ''
            description: ''
            weight: 4
            width: 0
            depth: 0
            height: 0
            price: 10
            cost_price: 0
            retail_price: 0
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: ''
            calculated_price: 10
            categories:
              - 21
            brand_id: 38
            option_set_id: null
            option_set_display: right
            inventory_level: 0
            inventory_warning_level: 0
            inventory_tracking: none
            reviews_rating_sum: 0
            reviews_count: 0
            total_sold: 0
            fixed_cost_shipping_price: 0
            is_free_shipping: false
            is_visible: true
            is_featured: false
            related_products:
              - -1
            warranty: ''
            bin_picking_number: ''
            layout_file: ''
            upc: ''
            mpn: ''
            gtin: ''
            search_keywords: ''
            availability: available
            availability_description: ''
            gift_wrapping_options_type: any
            gift_wrapping_options_list: []
            sort_order: 0
            condition: New
            is_condition_shown: false
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: ''
            meta_keywords: []
            meta_description: ''
            date_created: '2018-09-05T20:19:06+00:00'
            date_modified: '2018-09-05T20:19:06+00:00'
            view_count: 0
            preorder_release_date: null
            preorder_message: ''
            is_preorder_only: false
            is_price_hidden: false
            price_hidden_label: ''
            custom_url:
              url: /bigcommerce-coffee-mug/
              is_customized: false
            base_variant_id: 385
            open_graph_type: product
            open_graph_title: ''
            open_graph_description: ''
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            variants:
              - id: 385
                product_id: 193
                sku: ''
                sku_id: null
                price: 10
                calculated_price: 10
                sale_price: 0
                retail_price: 0
                map_price: 0
                weight: 4
                width: 0
                height: 0
                depth: 0
                is_free_shipping: false
                fixed_cost_shipping_price: 0
                calculated_weight: 4
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values: []
          - id: 194
            name: BigCommerce Coffee Mug_2
            type: physical
            sku: ''
            description: ''
            weight: 3
            width: 0
            depth: 0
            height: 0
            price: 11
            cost_price: 0
            retail_price: 0
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: ''
            calculated_price: 11
            categories:
              - 21
            brand_id: 38
            option_set_id: null
            option_set_display: right
            inventory_level: 0
            inventory_warning_level: 0
            inventory_tracking: none
            reviews_rating_sum: 0
            reviews_count: 0
            total_sold: 0
            fixed_cost_shipping_price: 0
            is_free_shipping: false
            is_visible: true
            is_featured: false
            related_products:
              - -1
            warranty: ''
            bin_picking_number: ''
            layout_file: ''
            upc: ''
            mpn: ''
            gtin: ''
            search_keywords: ''
            availability: available
            availability_description: ''
            gift_wrapping_options_type: any
            gift_wrapping_options_list: []
            sort_order: 0
            condition: New
            is_condition_shown: false
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: ''
            meta_keywords: []
            meta_description: ''
            date_created: '2018-09-05T20:20:47+00:00'
            date_modified: '2018-09-05T20:20:47+00:00'
            view_count: 0
            preorder_release_date: null
            preorder_message: ''
            is_preorder_only: false
            is_price_hidden: false
            price_hidden_label: ''
            custom_url:
              url: /bigcommerce-coffee-mug_2/
              is_customized: false
            base_variant_id: 386
            open_graph_type: product
            open_graph_title: ''
            open_graph_description: ''
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            variants:
              - id: 386
                product_id: 194
                sku: ''
                sku_id: null
                price: 11
                calculated_price: 11
                sale_price: 0
                retail_price: 0
                map_price: 0
                weight: 3
                width: 0
                height: 0
                depth: 0
                is_free_shipping: false
                fixed_cost_shipping_price: 0
                calculated_weight: 3
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values: []
          - id: 195
            name: BigCommerce Coffee Mug_3
            type: physical
            sku: ''
            description: ''
            weight: 3
            width: 0
            depth: 0
            height: 0
            price: 11
            cost_price: 0
            retail_price: 0
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: ''
            calculated_price: 11
            categories:
              - 21
            brand_id: 38
            option_set_id: 50
            option_set_display: right
            inventory_level: 0
            inventory_warning_level: 0
            inventory_tracking: none
            reviews_rating_sum: 0
            reviews_count: 0
            total_sold: 0
            fixed_cost_shipping_price: 0
            is_free_shipping: false
            is_visible: true
            is_featured: false
            related_products:
              - -1
            warranty: ''
            bin_picking_number: ''
            layout_file: product.html
            upc: ''
            mpn: ''
            gtin: ''
            search_keywords: ''
            availability: available
            availability_description: ''
            gift_wrapping_options_type: any
            gift_wrapping_options_list: []
            sort_order: 0
            condition: New
            is_condition_shown: false
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: ''
            meta_keywords: []
            meta_description: ''
            date_created: '2018-09-05T20:22:19+00:00'
            date_modified: '2018-09-07T20:01:26+00:00'
            view_count: 0
            preorder_release_date: null
            preorder_message: ''
            is_preorder_only: false
            is_price_hidden: false
            price_hidden_label: ''
            custom_url:
              url: /bigcommerce-coffee-mug_3/
              is_customized: false
            base_variant_id: null
            open_graph_type: product
            open_graph_title: ''
            open_graph_description: ''
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            variants:
              - id: 388
                product_id: 195
                sku: SKU-4484A834
                sku_id: 351
                price: null
                calculated_price: 11
                sale_price: null
                retail_price: null
                map_price: null
                weight: null
                calculated_weight: 3
                width: null
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 174
                    label: Beige
                    option_id: 221
                    option_display_name: Color
              - id: 389
                product_id: 195
                sku: SKU-9E932372
                sku_id: 352
                price: null
                calculated_price: 11
                sale_price: null
                retail_price: null
                map_price: null
                weight: null
                calculated_weight: 3
                width: null
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 175
                    label: Grey
                    option_id: 221
                    option_display_name: Color
              - id: 390
                product_id: 195
                sku: SKU-29CE333F
                sku_id: 353
                price: null
                calculated_price: 11
                sale_price: null
                retail_price: null
                map_price: null
                weight: null
                calculated_weight: 3
                width: null
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 176
                    label: Black
                    option_id: 221
                    option_display_name: Color
              - id: 391
                product_id: 195
                sku: SKU-02FBF02A
                sku_id: 354
                price: null
                calculated_price: 11
                sale_price: null
                retail_price: null
                map_price: null
                weight: null
                calculated_weight: 3
                width: null
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 189
                    label: Black-Walnut
                    option_id: 221
                    option_display_name: Color
          - id: 184
            name: Canvas Laundry Cart
            type: physical
            sku: ''
            description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
            weight: 15
            width: 0
            depth: 0
            height: 0
            price: 249
            cost_price: 0
            retail_price: 0
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: ''
            calculated_price: 249
            categories:
              - 23
              - 22
            brand_id: 36
            option_set_id: 51
            option_set_display: right
            inventory_level: 1497
            inventory_warning_level: 0
            inventory_tracking: variant
            reviews_rating_sum: 0
            reviews_count: 0
            total_sold: 6
            fixed_cost_shipping_price: 0
            is_free_shipping: false
            is_visible: true
            is_featured: false
            related_products:
              - -1
            warranty: ''
            bin_picking_number: ''
            layout_file: product.html
            upc: ''
            mpn: ''
            gtin: ''
            search_keywords: ''
            availability: available
            availability_description: ''
            gift_wrapping_options_type: any
            gift_wrapping_options_list: []
            sort_order: 0
            condition: New
            is_condition_shown: false
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: ''
            meta_keywords: []
            meta_description: ''
            date_created: '2018-08-15T14:48:53+00:00'
            date_modified: '2018-08-28T19:02:11+00:00'
            view_count: 22
            preorder_release_date: null
            preorder_message: ''
            is_preorder_only: false
            is_price_hidden: false
            price_hidden_label: ''
            custom_url:
              url: /all/canvas-laundry-cart/
              is_customized: true
            base_variant_id: null
            open_graph_type: product
            open_graph_title: ''
            open_graph_description: ''
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            variants:
              - id: 364
                product_id: 184
                sku: SMA-RED
                sku_id: 330
                price: 15.99
                calculated_price: 15.99
                sale_price: null
                retail_price: null
                map_price: null
                weight: 15
                calculated_weight: 15
                width: 4
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 497
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 177
                    label: Small
                    option_id: 199
                    option_display_name: Size
                  - id: 180
                    label: Red
                    option_id: 200
                    option_display_name: Color
              - id: 365
                product_id: 184
                sku: MED-RED
                sku_id: 331
                price: 555
                calculated_price: 555
                sale_price: null
                retail_price: null
                map_price: null
                weight: null
                calculated_weight: 15
                width: null
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 500
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 178
                    label: Medium
                    option_id: 199
                    option_display_name: Size
                  - id: 180
                    label: Red
                    option_id: 200
                    option_display_name: Color
              - id: 366
                product_id: 184
                sku: LAR-RED
                sku_id: 332
                price: null
                calculated_price: 253.99
                sale_price: null
                retail_price: null
                map_price: null
                weight: null
                calculated_weight: 15
                width: null
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 500
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 179
                    label: Large
                    option_id: 199
                    option_display_name: Size
                  - id: 180
                    label: Red
                    option_id: 200
                    option_display_name: Color
              - id: 367
                product_id: 184
                sku: SMA-GRE
                sku_id: 333
                price: null
                calculated_price: 249
                sale_price: null
                retail_price: null
                map_price: null
                weight: null
                calculated_weight: 15
                width: null
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 177
                    label: Small
                    option_id: 199
                    option_display_name: Size
                  - id: 181
                    label: Green
                    option_id: 200
                    option_display_name: Color
              - id: 368
                product_id: 184
                sku: MED-GRE
                sku_id: 334
                price: null
                calculated_price: 249
                sale_price: null
                retail_price: null
                map_price: null
                weight: null
                calculated_weight: 15
                width: null
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 178
                    label: Medium
                    option_id: 199
                    option_display_name: Size
                  - id: 181
                    label: Green
                    option_id: 200
                    option_display_name: Color
              - id: 369
                product_id: 184
                sku: LAR-GRE
                sku_id: 335
                price: null
                calculated_price: 253.99
                sale_price: null
                retail_price: null
                map_price: null
                weight: null
                calculated_weight: 15
                width: null
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 179
                    label: Large
                    option_id: 199
                    option_display_name: Size
                  - id: 181
                    label: Green
                    option_id: 200
                    option_display_name: Color
              - id: 370
                product_id: 184
                sku: SMA-BLU
                sku_id: 336
                price: null
                calculated_price: 249
                sale_price: null
                retail_price: null
                map_price: null
                weight: null
                calculated_weight: 15
                width: null
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 177
                    label: Small
                    option_id: 199
                    option_display_name: Size
                  - id: 182
                    label: Blue
                    option_id: 200
                    option_display_name: Color
              - id: 371
                product_id: 184
                sku: MED-BLU
                sku_id: 337
                price: null
                calculated_price: 249
                sale_price: null
                retail_price: null
                map_price: null
                weight: null
                calculated_weight: 15
                width: null
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 178
                    label: Medium
                    option_id: 199
                    option_display_name: Size
                  - id: 182
                    label: Blue
                    option_id: 200
                    option_display_name: Color
              - id: 372
                product_id: 184
                sku: LAR-BLU
                sku_id: 338
                price: null
                calculated_price: 253.99
                sale_price: null
                retail_price: null
                map_price: null
                weight: null
                calculated_weight: 15
                width: null
                height: null
                depth: null
                is_free_shipping: false
                fixed_cost_shipping_price: null
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: ''
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values:
                  - id: 179
                    label: Large
                    option_id: 199
                    option_display_name: Size
                  - id: 182
                    label: Blue
                    option_id: 200
                    option_display_name: Color
          - id: 173
            name: Ceramic Measuring Spoon Set
            type: physical
            sku: ''
            description: '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</p>'
            weight: 1
            width: 0
            depth: 0
            height: 0
            price: 18
            cost_price: 0
            retail_price: 0
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: ''
            calculated_price: 18
            categories:
              - 23
              - 21
            brand_id: 36
            option_set_id: null
            option_set_display: right
            inventory_level: 0
            inventory_warning_level: 0
            inventory_tracking: none
            reviews_rating_sum: 0
            reviews_count: 0
            total_sold: 1
            fixed_cost_shipping_price: 0
            is_free_shipping: false
            is_visible: true
            is_featured: false
            related_products:
              - -1
            warranty: ''
            bin_picking_number: ''
            layout_file: product.html
            upc: ''
            mpn: ''
            gtin: ''
            search_keywords: ''
            availability: available
            availability_description: ''
            gift_wrapping_options_type: any
            gift_wrapping_options_list: []
            sort_order: 0
            condition: New
            is_condition_shown: false
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: ''
            meta_keywords: []
            meta_description: ''
            date_created: '2018-08-15T14:48:45+00:00'
            date_modified: '2018-08-20T15:14:23+00:00'
            view_count: 0
            preorder_release_date: null
            preorder_message: ''
            is_preorder_only: false
            is_price_hidden: false
            price_hidden_label: ''
            custom_url:
              url: /all/ceramic-measuring-spoon-set/
              is_customized: true
            base_variant_id: 344
            open_graph_type: product
            open_graph_title: ''
            open_graph_description: ''
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            variants:
              - id: 344
                product_id: 173
                sku: ''
                sku_id: null
                price: 18
                calculated_price: 18
                sale_price: 0
                retail_price: 0
                map_price: 0
                weight: 1
                width: 0
                height: 0
                depth: 0
                is_free_shipping: false
                fixed_cost_shipping_price: 0
                calculated_weight: 1
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: 'https://cdn8.bigcommerce.com/s-jrah6gmn/products/173/images/424/measuringspoons1_1024x1024__22102__55079.1534344525.560.850.jpg?c=2'
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values: []
          - id: 170
            name: Ceramic Measuring Spoons
            type: physical
            sku: ''
            description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
            weight: 1
            width: 0
            depth: 0
            height: 0
            price: 25
            cost_price: 0
            retail_price: 0
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: ''
            calculated_price: 25
            categories:
              - 23
              - 21
            brand_id: 36
            option_set_id: null
            option_set_display: right
            inventory_level: 0
            inventory_warning_level: 0
            inventory_tracking: none
            reviews_rating_sum: 0
            reviews_count: 0
            total_sold: 0
            fixed_cost_shipping_price: 0
            is_free_shipping: false
            is_visible: true
            is_featured: false
            related_products:
              - -1
            warranty: ''
            bin_picking_number: ''
            layout_file: product.html
            upc: ''
            mpn: ''
            gtin: ''
            search_keywords: ''
            availability: available
            availability_description: ''
            gift_wrapping_options_type: any
            gift_wrapping_options_list: []
            sort_order: 0
            condition: New
            is_condition_shown: false
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: ''
            meta_keywords: []
            meta_description: ''
            date_created: '2018-08-15T14:48:42+00:00'
            date_modified: '2018-08-15T15:01:15+00:00'
            view_count: 0
            preorder_release_date: null
            preorder_message: ''
            is_preorder_only: false
            is_price_hidden: false
            price_hidden_label: ''
            custom_url:
              url: /all/ceramic-measuring-spoons/
              is_customized: true
            base_variant_id: 341
            open_graph_type: product
            open_graph_title: ''
            open_graph_description: ''
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            variants:
              - id: 341
                product_id: 170
                sku: ''
                sku_id: null
                price: 25
                calculated_price: 25
                sale_price: 0
                retail_price: 0
                map_price: 0
                weight: 1
                width: 0
                height: 0
                depth: 0
                is_free_shipping: false
                fixed_cost_shipping_price: 0
                calculated_weight: 1
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: 'https://cdn8.bigcommerce.com/s-jrah6gmn/products/170/images/411/measuringsquares2_1024x1024__07108__95421.1534344522.560.850.jpg?c=2'
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values: []
          - id: 176
            name: Ceramic Sugar & Creamer Set
            type: physical
            sku: ''
            description: '<div data-position="description"> <div class="description"> <div class="rte-content"> <p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p> </div> </div> </div>'
            weight: 1
            width: 0
            depth: 0
            height: 0
            price: 59
            cost_price: 0
            retail_price: 0
            sale_price: 0
            map_price: 0
            tax_class_id: 0
            product_tax_code: ''
            calculated_price: 59
            categories:
              - 23
              - 21
            brand_id: 36
            option_set_id: null
            option_set_display: right
            inventory_level: 0
            inventory_warning_level: 0
            inventory_tracking: none
            reviews_rating_sum: 0
            reviews_count: 0
            total_sold: 1
            fixed_cost_shipping_price: 0
            is_free_shipping: false
            is_visible: true
            is_featured: false
            related_products:
              - -1
            warranty: ''
            bin_picking_number: ''
            layout_file: product.html
            upc: ''
            mpn: ''
            gtin: ''
            search_keywords: ''
            availability: available
            availability_description: ''
            gift_wrapping_options_type: any
            gift_wrapping_options_list: []
            sort_order: 0
            condition: New
            is_condition_shown: false
            order_quantity_minimum: 0
            order_quantity_maximum: 0
            page_title: ''
            meta_keywords: []
            meta_description: ''
            date_created: '2018-08-15T14:48:48+00:00'
            date_modified: '2018-08-31T15:19:27+00:00'
            view_count: 0
            preorder_release_date: null
            preorder_message: ''
            is_preorder_only: false
            is_price_hidden: false
            price_hidden_label: ''
            custom_url:
              url: /all/ceramic-sugar-creamer-set/
              is_customized: true
            base_variant_id: 347
            open_graph_type: product
            open_graph_title: ''
            open_graph_description: ''
            open_graph_use_meta_description: true
            open_graph_use_product_name: true
            open_graph_use_image: true
            variants:
              - id: 347
                product_id: 176
                sku: ''
                sku_id: null
                price: 59
                calculated_price: 59
                sale_price: 0
                retail_price: 0
                map_price: 0
                weight: 1
                width: 0
                height: 0
                depth: 0
                is_free_shipping: false
                fixed_cost_shipping_price: 0
                calculated_weight: 1
                purchasing_disabled: false
                purchasing_disabled_message: ''
                image_url: 'https://cdn8.bigcommerce.com/s-jrah6gmn/products/176/images/432/milkandcreamer1_1024x1024__69117__81345.1534344528.560.850.jpg?c=2'
                cost_price: 0
                upc: ''
                mpn: ''
                gtin: ''
                inventory_level: 0
                inventory_warning_level: 0
                bin_picking_number: ''
                option_values: []
        meta:
          pagination:
            total: 39
            count: 10
            per_page: 10
            current_page: 1
            total_pages: 4
            links:
              next: '?sort=name&include=variants&limit=10&page=2'
              current: '?sort=name&include=variants&limit=10&page=1'
            too_many: false
  BrandResponse:
    description: ''
    schema:
      description: |-
        Brand Response returns for:
        * Create Brand
        * Get Brand by Id
        * Update Brand by Id
      type: object
      title: Brand Response
      properties:
        data:
          $ref: '#/definitions/BrandBase'
        meta:
          $ref: '#/definitions/Meta'
    examples:
      application/json:
        data:
          id: 50
          name: Common Good
          meta_keywords:
            - 'modern, clean, contemporary'
          meta_description: Common Good is a modern brand
          image_url: ''
          search_keywords: 'kitchen, laundry, cart, storage'
          custom_url:
            url: /brands/Common-Good.html
            is_customized: false
        meta: {}
  BrandCollectionResponse:
    description: ''
    schema:
      type: object
      title: Brand Collection Response
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/BrandBase'
        meta:
          $ref: '#/definitions/CollectionMeta'
    examples:
      application/json:
        data:
          - id: 35
            name: Sagaform
            page_title: ''
            meta_keywords:
              - ''
            meta_description: ''
            image_url: ''
            search_keywords: ''
            custom_url:
              url: /brands/Sagaform.html
              is_customized: false
          - id: 36
            name: OFS
            page_title: OFS
            meta_keywords:
              - modern
              - ' clean'
              - ' contemporary'
            meta_description: OFS is a modern brand.
            image_url: ''
            search_keywords: 'kitchen, laundry, cart, storage'
            custom_url:
              url: /brands/OFS.html
              is_customized: false
          - id: 37
            name: Common Good
            page_title: ''
            meta_keywords:
              - ''
            meta_description: ''
            image_url: 'https://cdn8.bigcommerce.com/s-jrah6gmn/product_images/k/screen%20shot%202018-05-07%20at%2012.24.24%20pm_1525785365__65102.png'
            search_keywords: ''
            custom_url:
              url: /brands/Common-Good.html
              is_customized: false
          - id: 38
            name: BigCommerce
            page_title: ''
            meta_keywords:
              - ''
            meta_description: ''
            image_url: ''
            search_keywords: ''
            custom_url:
              url: /bigcommerce/
              is_customized: false
          - id: 39
            name: Test Brand One
            page_title: ''
            meta_keywords:
              - ''
            meta_description: ''
            image_url: 'https://cdn8.bigcommerce.com/s-jrah6gmn/product_images/q/apihqggzm__53766.jpg'
            search_keywords: ''
            custom_url:
              url: /test-brand-one/
              is_customized: false
          - id: 40
            name: Fog Linen Work
            page_title: ''
            meta_keywords:
              - ''
            meta_description: null
            image_url: ''
            search_keywords: ''
            custom_url:
              url: /fog-linen-work/
              is_customized: false
          - id: 41
            name: Barr-Co.
            page_title: ''
            meta_keywords:
              - ''
            meta_description: null
            image_url: ''
            search_keywords: ''
            custom_url:
              url: /barr-co/
              is_customized: false
          - id: 42
            name: Thames & Hudson
            page_title: ''
            meta_keywords:
              - ''
            meta_description: null
            image_url: ''
            search_keywords: ''
            custom_url:
              url: /thames-hudson/
              is_customized: false
          - id: 43
            name: Able Brewing
            page_title: ''
            meta_keywords:
              - ''
            meta_description: null
            image_url: ''
            search_keywords: ''
            custom_url:
              url: /able-brewing/
              is_customized: false
          - id: 44
            name: Chemex
            page_title: ''
            meta_keywords:
              - ''
            meta_description: null
            image_url: ''
            search_keywords: ''
            custom_url:
              url: /chemex/
              is_customized: false
          - id: 45
            name: Kinfolk
            page_title: ''
            meta_keywords:
              - ''
            meta_description: null
            image_url: ''
            search_keywords: ''
            custom_url:
              url: /kinfolk/
              is_customized: false
          - id: 46
            name: Iris Hantverk
            page_title: ''
            meta_keywords:
              - ''
            meta_description: null
            image_url: ''
            search_keywords: ''
            custom_url:
              url: /iris-hantverk/
              is_customized: false
          - id: 47
            name: Gather Journal
            page_title: ''
            meta_keywords:
              - ''
            meta_description: null
            image_url: ''
            search_keywords: ''
            custom_url:
              url: /gather-journal/
              is_customized: false
          - id: 48
            name: Openhouse Magazine
            page_title: ''
            meta_keywords:
              - ''
            meta_description: null
            image_url: ''
            search_keywords: ''
            custom_url:
              url: /openhouse-magazine/
              is_customized: false
          - id: 49
            name: Smith Journal
            page_title: ''
            meta_keywords:
              - ''
            meta_description: null
            image_url: ''
            search_keywords: ''
            custom_url:
              url: /smith-journal/
              is_customized: false
        meta:
          pagination:
            total: 15
            count: 15
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  BrandImageUpload:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: object
          properties:
            image_url:
              type: string
        meta:
          type: object
    examples:
      application/json:
        data:
          image_url: 'https://cdn11.bigcommerce.com/s-{store_hash}/product_images/k/group_1545334669__76009.png'
        meta: {}
  MetafieldCollectionResponse:
    description: ''
    schema:
      type: object
      title: Meta Field Collection Response
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/MetafieldBase'
        meta:
          $ref: '#/definitions/CollectionMeta'
    examples:
      application/json:
        data:
          - permission_set: app_only
            namespace: Warehouse Locations
            key: Location
            value: 4HG
            description: Location in the warehouse
            resource_type: brand
            resource_id: 111
            id: 6
            created_at: '1973-01-20T21:34:57.903Z'
            updated_at: '1990-12-30T00:29:23.515Z'
          - permission_set: read
            namespace: Warehouse Locations
            key: Location
            value: 4HG
            description: Location in the warehouse
            resource_type: brand
            resource_id: 111
            id: 6
            created_at: '1973-01-20T21:34:57.903Z'
            updated_at: '1990-12-30T00:29:23.515Z'
          - permission_set: app_only
            namespace: Warehouse Locations
            key: Location
            value: 4HG
            description: Location in the warehouse
            resource_type: brand
            resource_id: 111
            id: 6
            created_at: '1973-01-20T21:34:57.903Z'
            updated_at: '1990-12-30T00:29:23.515Z'
        meta:
          pagination:
            total: 3
            count: 3
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  MetafieldResponse:
    description: ''
    schema:
      type: object
      title: Metafield Response
      properties:
        data:
          $ref: '#/definitions/MetafieldBase'
        meta:
          $ref: '#/definitions/Meta'
    examples:
      application/json:
        data:
          id: 8
          key: location_id
          value: 'Shelf 3, Bin 5'
          namespace: Inventory Namespace
          permission_set: read
          resource_type: product
          resource_id: 158
          description: Where products are located
          date_created: '2018-09-13T16:42:37+00:00'
          date_modified: '2018-09-13T16:42:37+00:00'
        meta: {}
  CategoryCollectionResponse:
    description: ''
    schema:
      type: object
      title: Category Base
      properties:
        id:
          type: integer
          description: The unique numeric ID of the category; increments sequentially.
        parent_id:
          type: integer
          description: |-
            The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
            Required in /POST if creating a child category.
          x-required:
            - post
          example: 2
        name:
          type: string
          description: |-
            The name displayed for the category. Name is unique with respect to the category's siblings.
            Required in /POST.
          x-required:
            - post
          minLength: 1
          maxLength: 50
          example: Bath
        description:
          type: string
          description: |
            The product description, which can include HTML formatting.
          example: <p>We offer a wide variety of products perfect for relaxing</p>
        views:
          type: integer
          description: |
            Number of views the category has on the storefront.
          example: 1050
        sort_order:
          type: integer
          description: |
            Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
          minimum: -2147483648
          maximum: 2147483647
          example: 3
        page_title:
          type: string
          description: |
            Custom title for the category page. If not defined, the category name will be used as the meta title.
          minLength: 0
          maxLength: 255
          example: Bath
        search_keywords:
          type: string
          description: |
            A comma-separated list of keywords that can be used to locate the category when searching the store.
          minLength: 0
          maxLength: 65535
        meta_keywords:
          type: array
          description: |
            Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: ["awesome","sauce"].
          items:
            type: string
        meta_description:
          type: string
          description: |
            Custom meta description for the category page. If not defined, the store's default meta description will be used.
          minLength: 0
          maxLength: 65535
        layout_file:
          type: string
          description: |
            A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.
          minLength: 0
          maxLength: 500
          example: category.html
        is_visible:
          type: boolean
          description: |
            Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.
        default_product_sort:
          type: string
          description: |
            Determines how the products are sorted on category page load.
          enum:
            - use_store_settings
            - featured
            - newest
            - best_selling
            - alpha_asc
            - alpha_desc
            - avg_customer_review
            - price_asc
            - price_desc
        image_url:
          type: string
          description: |
            Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.
          x-url: true
          example: 'https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png'
        custom_url:
          $ref: '#/definitions/CustomUrlCategory'
        meta:
          $ref: '#/definitions/CollectionMeta'
    examples:
      application/json:
        data:
          - id: 19
            parent_id: 0
            name: Garden
            description: <p>This is the garden description</p>
            views: 0
            sort_order: 2
            page_title: page title
            meta_keywords:
              - meta keyword
            meta_description: meta description
            layout_file: category.html
            image_url: ''
            is_visible: true
            search_keywords: search keywords
            default_product_sort: use_store_settings
            custom_url:
              url: /garden/
              is_customized: false
          - id: 20
            parent_id: 0
            name: Publications
            description: ''
            views: 0
            sort_order: 4
            page_title: ''
            meta_keywords:
              - ''
            meta_description: ''
            layout_file: category_with_facets.html
            image_url: ''
            is_visible: true
            search_keywords: ''
            default_product_sort: use_store_settings
            custom_url:
              url: /publications/
              is_customized: false
          - id: 21
            parent_id: 0
            name: Kitchen
            description: ''
            views: 0
            sort_order: 3
            page_title: ''
            meta_keywords:
              - ''
            meta_description: ''
            layout_file: category_with_facets.html
            image_url: ''
            is_visible: true
            search_keywords: ''
            default_product_sort: use_store_settings
            custom_url:
              url: /kitchen/
              is_customized: false
          - id: 22
            parent_id: 0
            name: Utility
            description: ''
            views: 0
            sort_order: 5
            page_title: ''
            meta_keywords:
              - ''
            meta_description: ''
            layout_file: category_with_facets.html
            image_url: ''
            is_visible: true
            search_keywords: ''
            default_product_sort: use_store_settings
            custom_url:
              url: /utility/
              is_customized: false
          - id: 23
            parent_id: 0
            name: Shop All
            description: ''
            views: 0
            sort_order: 0
            page_title: ''
            meta_keywords:
              - ''
            meta_description: ''
            layout_file: category_with_facets.html
            image_url: ''
            is_visible: true
            search_keywords: ''
            default_product_sort: use_store_settings
            custom_url:
              url: /shop-all/
              is_customized: false
          - id: 39
            parent_id: 19
            name: Bath
            description: ''
            views: 0
            sort_order: 0
            page_title: ''
            meta_keywords:
              - ''
            meta_description: ''
            layout_file: category.html
            image_url: ''
            is_visible: true
            search_keywords: ''
            default_product_sort: use_store_settings
            custom_url:
              url: /garden/bath/
              is_customized: false
        meta:
          pagination:
            total: 6
            count: 6
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  CategoryResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/CategoryBase'
        meta:
          $ref: '#/definitions/Meta'
      title: Category Response
  ProductResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/Product'
        meta:
          $ref: '#/definitions/Meta'
      title: Product Response
    examples:
      application/json:
        data:
          id: 174
          name: 1L Le Parfait Jar
          type: physical
          sku: ''
          description: '<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>'
          weight: 1
          width: 0
          depth: 0
          height: 0
          price: 7.95
          cost_price: 0
          retail_price: 10
          sale_price: 0
          map_price: 0
          tax_class_id: 0
          product_tax_code: ''
          calculated_price: 7.95
          categories:
            - 23
            - 21
          brand_id: 36
          option_set_id: null
          option_set_display: right
          inventory_level: 0
          inventory_warning_level: 0
          inventory_tracking: none
          reviews_rating_sum: 0
          reviews_count: 0
          total_sold: 7
          fixed_cost_shipping_price: 0
          is_free_shipping: false
          is_visible: true
          is_featured: false
          related_products:
            - -1
          warranty: ''
          bin_picking_number: ''
          layout_file: product.html
          upc: ''
          mpn: ''
          gtin: ''
          search_keywords: 'jar, glass'
          availability: available
          availability_description: ''
          gift_wrapping_options_type: any
          gift_wrapping_options_list: []
          sort_order: 0
          condition: New
          is_condition_shown: false
          order_quantity_minimum: 0
          order_quantity_maximum: 0
          page_title: ''
          meta_keywords: []
          meta_description: ''
          date_created: '2018-08-15T14:48:46+00:00'
          date_modified: '2018-09-05T20:42:07+00:00'
          view_count: 10
          preorder_release_date: null
          preorder_message: ''
          is_preorder_only: false
          is_price_hidden: false
          price_hidden_label: ''
          custom_url:
            url: /all/1l-le-parfait-jar/
            is_customized: true
          base_variant_id: 345
          open_graph_type: product
          open_graph_title: ''
          open_graph_description: ''
          open_graph_use_meta_description: true
          open_graph_use_product_name: true
          open_graph_use_image: true
        meta: {}
  BulkPricingRuleResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/BulkPricingRuleBase'
        meta:
          $ref: '#/definitions/Meta'
    examples:
      application/json:
        data:
          id: 83
          quantity_min: 1
          quantity_max: 3
          type: price
          amount: 1
        meta: {}
  BulkPricingRuleCollectionResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/BulkPricingRuleBase'
        meta:
          $ref: '#/definitions/CollectionMeta'
    examples:
      application/json:
        data:
          - id: 83
            quantity_min: 1
            quantity_max: 3
            type: price
            amount: 1
          - id: 84
            quantity_min: 4
            quantity_max: 0
            type: price
            amount: 1.25
        meta:
          pagination:
            total: 2
            count: 2
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  ComplexRuleCollectionResponse:
    description: ''
    schema:
      type: object
      description: Complex Rule Response
      title: Complex Rule Collection Response
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/ComplexRuleBase'
        meta:
          $ref: '#/definitions/CollectionMeta'
    examples:
      application/json:
        data:
          - id: 82
            product_id: 195
            sort_order: 0
            enabled: true
            stop: false
            price_adjuster:
              adjuster: relative
              adjuster_value: 8
            weight_adjuster: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            purchasing_hidden: false
            image_url: ''
            conditions:
              - rule_id: 82
                modifier_id: 221
                modifier_value_id: 175
                variant_id: null
                combination_id: 0
          - id: 83
            product_id: 195
            sort_order: 1
            enabled: true
            stop: false
            price_adjuster: null
            weight_adjuster:
              adjuster: relative
              adjuster_value: 3
            purchasing_disabled: false
            purchasing_disabled_message: ''
            purchasing_hidden: false
            image_url: ''
            conditions:
              - rule_id: 83
                modifier_id: 221
                modifier_value_id: 174
                variant_id: null
                combination_id: 0
        meta:
          pagination:
            total: 2
            count: 2
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  ComplexRuleResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/ComplexRuleBase'
        meta:
          $ref: '#/definitions/Meta'
  CustomFieldCollectionResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/CustomFieldBase'
        meta:
          $ref: '#/definitions/CollectionMeta'
    examples:
      application/json:
        data:
          - name: Release year
            value: '1987'
            id: 1
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              previous: '?page=1&limit=50'
              current: '?page=1&limit=50'
              next: '?page=1&limit=50'
  CustomFieldResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/CustomFieldBase'
        meta:
          $ref: '#/definitions/Meta'
    examples:
      application/json:
        data:
          name: Release Year
          value: '1976'
          id: 2
        meta: {}
  ProductImageCollectionResponse:
    description: ''
    schema:
      description: |
        Response payload for the BigCommerce API.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/ProductImage'
        meta:
          $ref: '#/definitions/CollectionMeta'
      title: Product Image Collection Response
    examples:
      application/json:
        data:
          - id: 382
            product_id: 158
            is_thumbnail: true
            sort_order: 0
            description: ''
            image_file: a/521/foglinenbeigestripetowel1b_1024x1024__83011__60806.jpg
            url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.1280.1280.jpg?c=2'
            url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.560.850.jpg?c=2'
            url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2'
            url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.66.100.jpg?c=2'
            date_modified: '2018-08-15T14:48:31+00:00'
          - id: 383
            product_id: 158
            is_thumbnail: false
            sort_order: 0
            description: ''
            image_file: k/050/foglinenbeigestripetowel2b_1024x1024__16082__46564.jpg
            url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.1280.1280.jpg?c=2'
            url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.560.850.jpg?c=2'
            url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.330.500.jpg?c=2'
            url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.66.100.jpg?c=2'
            date_modified: '2018-08-15T14:48:31+00:00'
        meta:
          pagination:
            total: 2
            count: 2
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  ProductImageResponse:
    description: ''
    schema:
      description: |
        Response payload for the BigCommerce API.
      type: object
      properties:
        data:
          $ref: '#/definitions/ProductImage'
        meta:
          $ref: '#/definitions/Meta'
      title: Product Image Response
    examples:
      application/json:
        data:
          id: 485
          product_id: 158
          is_thumbnail: false
          sort_order: 1
          description: ''
          image_file: o/381/product-image__98178.png
          url_zoom: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2'
          url_standard: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2'
          url_thumbnail: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2'
          url_tiny: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2'
          date_modified: '2018-09-13T15:57:07+00:00'
        meta: {}
  ModifierCollectionResponse:
    description: ''
    schema:
      description: Modifier Collection Response return for /GET All Modifiers.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/Modifier'
        meta:
          $ref: '#/definitions/CollectionMeta'
      title: Modifier Collection Response
    examples:
      application/json:
        data:
          - id: 206
            product_id: 158
            name: Insurance
            display_name: Insurace
            type: checkbox
            required: true
            config:
              checkbox_label: $5 for insurance
              checked_by_default: false
            option_values:
              - id: 183
                option_id: 206
                label: 'Yes'
                sort_order: 0
                value_data:
                  checked_value: true
                is_default: false
                adjusters:
                  price: null
                  weight: null
                  image_url: ''
                  purchasing_disabled:
                    status: false
                    message: ''
              - id: 184
                option_id: 206
                label: 'No'
                sort_order: 1
                value_data:
                  checked_value: false
                is_default: true
                adjusters:
                  price: null
                  weight: null
                  image_url: ''
                  purchasing_disabled:
                    status: false
                    message: ''
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  ModifierResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/Modifier'
        meta:
          $ref: '#/definitions/Meta'
      title: Modifier Response
    examples:
      application/json:
        data:
          - id: 160
            product_id: 131
            name: Add-a-$5-Donation1535039590-191
            display_name: Add a $5 Donation
            type: checkbox
            required: false
            config:
              checkbox_label: Check for Donation
              checked_by_default: false
            option_values:
              - id: 149
                option_id: 160
                label: 'Yes'
                sort_order: 0
                value_data:
                  checked_value: true
                is_default: false
                adjusters:
                  price:
                    adjuster: null
                    adjuster_value: null
                  weight: null
                  image_url: ''
                  purchasing_disabled:
                    status: false
                    message: ''
              - id: 150
                option_id: 160
                label: 'No'
                sort_order: 1
                value_data:
                  checked_value: false
                is_default: true
                adjusters:
                  price: null
                  weight: null
                  image_url: ''
                  purchasing_disabled:
                    status: false
                    message: ''
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  ModifierValueCollectionResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/ModifierValue'
        meta:
          $ref: '#/definitions/CollectionMeta'
      title: Modifier Value Collection Response
      description: Returns for GET All Modifier Values on a Product
    examples:
      application/json:
        data:
          - id: 190
            option_id: 222
            label: 'Yes'
            sort_order: 0
            value_data:
              checked_value: true
            is_default: false
            adjusters:
              price:
                adjuster: relative
                adjuster_value: 5
              weight: null
              image_url: ''
              purchasing_disabled:
                status: false
                message: ''
          - id: 191
            option_id: 222
            label: 'No'
            sort_order: 1
            value_data:
              checked_value: false
            is_default: true
            adjusters:
              price: null
              weight: null
              image_url: ''
              purchasing_disabled:
                status: false
                message: ''
        meta:
          pagination:
            total: 2
            count: 2
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  ModifierValueResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/ModifierValue'
        meta:
          $ref: '#/definitions/Meta'
      title: Modifier Value Response
    examples:
      application/json:
        data:
          id: 190
          option_id: 222
          label: 'Yes'
          sort_order: 0
          value_data: null
          is_default: false
          adjusters:
            price:
              adjuster: relative
              adjuster_value: 5
            weight: null
            image_url: ''
            purchasing_disabled:
              status: false
              message: ''
        meta: {}
  OptionCollectionResponse:
    description: ''
    schema:
      description: Get all product options
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/Option'
        meta:
          $ref: '#/definitions/CollectionMeta'
      title: Option Collection Response
    examples:
      application/json:
        data:
          - id: 220
            product_id: 192
            name: Color (Colors only)
            display_name: Color
            type: swatch
            sort_order: 0
            option_values:
              - id: 174
                label: Beige
                sort_order: 1
                value_data:
                  colors:
                    - '#FAFAEB'
                is_default: false
              - id: 175
                label: Grey
                sort_order: 2
                value_data:
                  colors:
                    - '#BDBDBD'
                is_default: false
              - id: 176
                label: Black
                sort_order: 3
                value_data:
                  colors:
                    - '#000000'
                is_default: false
              - id: 189
                label: Black-Walnut
                sort_order: 4
                value_data:
                  colors:
                    - '#e80ee8'
                is_default: false
            config: []
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  OptionResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/Option'
        meta:
          $ref: '#/definitions/Meta'
      title: Option Response
    examples:
      application/json:
        data:
          id: 220
          product_id: 192
          name: Color (Colors only)
          display_name: Color
          type: swatch
          sort_order: 0
          option_values:
            - id: 174
              label: Beige
              sort_order: 1
              value_data:
                colors:
                  - '#FAFAEB'
              is_default: false
            - id: 175
              label: Grey
              sort_order: 2
              value_data:
                colors:
                  - '#BDBDBD'
              is_default: false
            - id: 176
              label: Black
              sort_order: 3
              value_data:
                colors:
                  - '#000000'
              is_default: false
            - id: 189
              label: Black-Walnut
              sort_order: 4
              value_data:
                colors:
                  - '#e80ee8'
              is_default: false
          config: []
        meta: {}
  OptionValueCollectionResponse:
    description: ''
    schema:
      description: Get Option Values response.
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/OptionValue'
        meta:
          $ref: '#/definitions/CollectionMeta'
      title: Option Value Collection Response
    examples:
      application/json:
        data:
          - id: 174
            label: Beige
            sort_order: 1
            value_data:
              colors:
                - '#FAFAEB'
            is_default: false
          - id: 175
            label: Grey
            sort_order: 2
            value_data:
              colors:
                - '#BDBDBD'
            is_default: false
          - id: 176
            label: Black
            sort_order: 3
            value_data:
              colors:
                - '#000000'
            is_default: false
          - id: 189
            label: Black-Walnut
            sort_order: 4
            value_data:
              colors:
                - '#e80ee8'
            is_default: false
        meta:
          pagination:
            total: 4
            count: 4
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  OptionValueResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/OptionValue'
        meta:
          $ref: '#/definitions/Meta'
      title: Option Value Response
    examples:
      application/json:
        data:
          id: 44
          label: Pick a color
          sort_order: 9
          value_data:
            colors:
              - '#123c91, #FFFF00, #397a44'
          is_default: false
  ProductReviewCollectionResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/ProductReview'
        meta:
          $ref: '#/definitions/CollectionMeta'
      title: Product Review Collection Response
    examples:
      application/json:
        data:
          title: Great Product
          text: This product is amazing!!!
          status: approved
          rating: 5
          email: janedoe@email.com
          name: Jane Doe
          date_reviewed: '2018-05-07T19:37:13+00:00'
          id: 5
          date_created: '2018-05-07T19:37:13+00:00"'
          date_modified: '2018-05-07T19:38:36+00:00'
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              previous: '?page=1&limit=50'
              current: '?page=1&limit=50'
              next: '?page=1&limit=50'
  ProductReviewResponse:
    description: ''
    schema:
      description: |
        Response payload for the BigCommerce API.
      type: object
      properties:
        data:
          $ref: '#/definitions/ProductReview'
        meta:
          $ref: '#/definitions/Meta'
      title: Product Review Response
    examples:
      application/json:
        data:
          title: irur
          text: anim aute
          status: Lorem ad sed voluptate
          rating: -39218623
          email: esse Lorem laborum aute
          name: 'ut in '
          date_reviewed: '2011-12-31T13:40:42.971Z'
          id: 82495037
          product_id: 22609026
          date_created: '1985-01-17T07:37:20.439Z'
          date_modified: '2004-09-28T14:38:21.973Z'
        meta: {}
  VariantCollectionResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/Variant'
        meta:
          $ref: '#/definitions/CollectionMeta'
      title: Variant Collection Response
    examples:
      application/json:
        data:
          - id: 382
            product_id: 192
            sku: SMIT
            sku_id: 348
            price: 10
            calculated_price: 10
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 2
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 174
                label: Beige
                option_id: 220
                option_display_name: Color
          - id: 383
            product_id: 192
            sku: SMIT-1
            sku_id: 349
            price: null
            calculated_price: 25
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 1
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: null
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 175
                label: Grey
                option_id: 220
                option_display_name: Color
          - id: 384
            product_id: 192
            sku: SMIT-2
            sku_id: 350
            price: null
            calculated_price: 25
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 1
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: null
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 176
                label: Black
                option_id: 220
                option_display_name: Color
        meta:
          pagination:
            total: 3
            count: 3
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  VariantResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/Variant'
        meta:
          $ref: '#/definitions/Meta'
      title: Variant Response
    examples:
      application/json:
        data:
          id: 384
          product_id: 192
          sku: SMIT-2
          sku_id: 350
          price: null
          calculated_price: 25
          sale_price: null
          retail_price: null
          map_price: null
          weight: null
          calculated_weight: 1
          width: null
          height: null
          depth: null
          is_free_shipping: false
          fixed_cost_shipping_price: null
          purchasing_disabled: false
          purchasing_disabled_message: ''
          image_url: ''
          cost_price: null
          upc: ''
          mpn: ''
          gtin: ''
          inventory_level: 0
          inventory_warning_level: 0
          bin_picking_number: ''
          option_values:
            - id: 176
              label: Black
              option_id: 220
              option_display_name: Color
        meta: {}
  ProductVideoCollectionResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/ProductVideo'
        meta:
          $ref: '#/definitions/CollectionMeta'
      title: Product Video Collection Response
    examples:
      application/json:
        data:
          - id: 6
            type: youtube
            video_id: PqBTp23RLhI
            product_id: 192
            sort_order: 1
            title: Creating and Editing Banners | BigCommerce Tutorials
            description: 'Learn how to create and edit marketing banners. Marketing banners are a great way to advertise sales, display coupon codes, and add design elements. Let’s take a look at how you can leverage banners to convert your store’s visitors into paying customers.'
            length: '01:54'
          - id: 7
            type: youtube
            video_id: EhYBjzqd-nI
            product_id: 192
            sort_order: 2
            title: BigCommerce Company Values
            description: |-
              These are the core principles upon which BigCommerce was built, guiding what we do and how we do it. Each employee learns them, loves them and lives them. Our merchants benefit from them every time they use our product or get help from our support team.

              Join the BigCommerce team and help us build software that changes lives!

              https://www.bigcommerce.com/careers/
            length: '03:30'
          - id: 8
            type: youtube
            video_id: vAUdo4kRjrU
            product_id: 192
            sort_order: 3
            title: TOP WORKPLACES 2016 - Austin American Statesman + BigCommerce
            description: |-
              We've been named one of Austin American-Statesman's Top WorkPlaces for the 5th year in a row! Here's what some employees have to say:

              “I am given the freedom and trust to make a difference.”

              “Everyone believes in the product and growing the company.”

              “I'm appreciated for the work I do and there is room to grown within the company.”

              Work With Us!
              http://www.bigcommerce.com/careers.php
            length: '01:37'
        meta:
          pagination:
            total: 3
            count: 3
            per_page: 50
            current_page: 1
            total_pages: 1
            links:
              current: '?page=1&limit=50'
  ProductVideoResponse:
    description: ''
    schema:
      description: |
        Response payload for the BigCommerce API.
      type: object
      properties:
        data:
          $ref: '#/definitions/ProductVideo'
        meta:
          $ref: '#/definitions/Meta'
      title: Product Video Response
    examples:
      application/json:
        title: Your Video
        description: Company Values
        sort_order: 1
        type: youtube
        video_id: 123345AA
  CatalogSummaryResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/CatalogSummary'
        meta:
          $ref: '#/definitions/Meta'
      title: Catalog Summary Response
    examples:
      application/json:
        data:
          inventory_count: 4995
          variant_count: 54
          inventory_value: 702350.03
          highest_variant_price: 555
          average_variant_price: 74.40055556
          lowest_variant_price: 7
          oldest_variant_date: '2018-08-15'
          newest_variant_date: '2018-09-07'
          primary_category_id: 23
          primary_category_name: Shop All
        meta: {}
  CatalogVariantCollectionResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/Variant'
        meta:
          $ref: '#/definitions/CollectionMeta'
      title: Variant Collection Response
    examples:
      application/json:
        data:
          - id: 364
            product_id: 184
            sku: SMA-RED
            sku_id: 330
            price: 15.99
            calculated_price: 15.99
            sale_price: null
            retail_price: null
            map_price: null
            weight: 15
            calculated_weight: 15
            width: 4
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 497
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 177
                label: Small
                option_id: 199
                option_display_name: Size
              - id: 180
                label: Red
                option_id: 200
                option_display_name: Color
          - id: 365
            product_id: 184
            sku: MED-RED
            sku_id: 331
            price: 555
            calculated_price: 555
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 15
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 500
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 178
                label: Medium
                option_id: 199
                option_display_name: Size
              - id: 180
                label: Red
                option_id: 200
                option_display_name: Color
          - id: 366
            product_id: 184
            sku: LAR-RED
            sku_id: 332
            price: null
            calculated_price: 253.99
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 15
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 500
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 179
                label: Large
                option_id: 199
                option_display_name: Size
              - id: 180
                label: Red
                option_id: 200
                option_display_name: Color
          - id: 367
            product_id: 184
            sku: SMA-GRE
            sku_id: 333
            price: null
            calculated_price: 249
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 15
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 177
                label: Small
                option_id: 199
                option_display_name: Size
              - id: 181
                label: Green
                option_id: 200
                option_display_name: Color
          - id: 368
            product_id: 184
            sku: MED-GRE
            sku_id: 334
            price: null
            calculated_price: 249
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 15
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 178
                label: Medium
                option_id: 199
                option_display_name: Size
              - id: 181
                label: Green
                option_id: 200
                option_display_name: Color
          - id: 369
            product_id: 184
            sku: LAR-GRE
            sku_id: 335
            price: null
            calculated_price: 253.99
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 15
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 179
                label: Large
                option_id: 199
                option_display_name: Size
              - id: 181
                label: Green
                option_id: 200
                option_display_name: Color
          - id: 370
            product_id: 184
            sku: SMA-BLU
            sku_id: 336
            price: null
            calculated_price: 249
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 15
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 177
                label: Small
                option_id: 199
                option_display_name: Size
              - id: 182
                label: Blue
                option_id: 200
                option_display_name: Color
          - id: 371
            product_id: 184
            sku: MED-BLU
            sku_id: 337
            price: null
            calculated_price: 249
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 15
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 178
                label: Medium
                option_id: 199
                option_display_name: Size
              - id: 182
                label: Blue
                option_id: 200
                option_display_name: Color
          - id: 372
            product_id: 184
            sku: LAR-BLU
            sku_id: 338
            price: null
            calculated_price: 253.99
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 15
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 179
                label: Large
                option_id: 199
                option_display_name: Size
              - id: 182
                label: Blue
                option_id: 200
                option_display_name: Color
          - id: 376
            product_id: 158
            sku: SKU-A0C8A203
            sku_id: 342
            price: null
            calculated_price: 49.99
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 1
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: null
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 174
                label: Beige
                option_id: 207
                option_display_name: Color
          - id: 377
            product_id: 158
            sku: SKU-E628145D
            sku_id: 343
            price: null
            calculated_price: 49.99
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 1
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: null
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 175
                label: Grey
                option_id: 207
                option_display_name: Color
          - id: 378
            product_id: 158
            sku: SKU-E898ABC0
            sku_id: 344
            price: null
            calculated_price: 49.99
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 1
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: null
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 176
                label: Black
                option_id: 207
                option_display_name: Color
          - id: 382
            product_id: 192
            sku: SMIT
            sku_id: 348
            price: 10
            calculated_price: 10
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 2
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 174
                label: Beige
                option_id: 220
                option_display_name: Color
          - id: 383
            product_id: 192
            sku: SMIT-1
            sku_id: 349
            price: null
            calculated_price: 25
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 1
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: null
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 175
                label: Grey
                option_id: 220
                option_display_name: Color
          - id: 384
            product_id: 192
            sku: SMIT-2
            sku_id: 350
            price: null
            calculated_price: 25
            sale_price: null
            retail_price: null
            map_price: null
            weight: null
            calculated_weight: 1
            width: null
            height: null
            depth: null
            is_free_shipping: false
            fixed_cost_shipping_price: null
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: null
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values:
              - id: 176
                label: Black
                option_id: 220
                option_display_name: Color
          - id: 325
            product_id: 157
            sku: ''
            sku_id: null
            price: 66
            calculated_price: 66
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/157/images/379/showerwhite3_1024x1024_1024x1024__77046__53871.1534344510.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 330
            product_id: 159
            sku: ''
            sku_id: null
            price: 34
            calculated_price: 34
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/159/images/384/BARRhandcream1_1024x1024_1024x1024__91787__18352.1534344511.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 331
            product_id: 160
            sku: ''
            sku_id: null
            price: 28
            calculated_price: 28
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/160/images/386/barr_coroomspray_1024x1024__43836__61957.1534344512.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 332
            product_id: 161
            sku: ''
            sku_id: null
            price: 109
            calculated_price: 109
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/161/images/387/roundterrariumlarge_1024x1024__12432__22764.1534344513.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 333
            product_id: 162
            sku: ''
            sku_id: null
            price: 89
            calculated_price: 89
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/162/images/389/roundterrariumsmall_1024x1024__05749__31860.1534344513.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 3000
            inventory_warning_level: 3
            bin_picking_number: ''
            option_values: []
          - id: 334
            product_id: 163
            sku: ''
            sku_id: null
            price: 32
            calculated_price: 32
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/163/images/391/twinestand3_1024x1024_1024x1024__17689__50909.1534344514.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 335
            product_id: 164
            sku: ''
            sku_id: null
            price: 8
            calculated_price: 8
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/164/images/395/naturaltwine_1024x1024_1024x1024__72720__85337.1534344514.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 336
            product_id: 165
            sku: ''
            sku_id: null
            price: 10.95
            calculated_price: 10.95
            sale_price: 0
            retail_price: 15
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/165/images/396/barrsalve1_1024x1024_1024x1024__06826__26118.1534344515.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 337
            product_id: 166
            sku: ''
            sku_id: null
            price: 28
            calculated_price: 28
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/166/images/397/livingwithplants_grande__26452__28114.1534344515.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 338
            product_id: 167
            sku: ''
            sku_id: null
            price: 225
            calculated_price: 225
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/167/images/398/ablebrewingsystem4_1024x1024__07155__93974.1534344516.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 339
            product_id: 168
            sku: ''
            sku_id: null
            price: 55
            calculated_price: 55
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/168/images/402/chemex6cup_1024x1024_1024x1024__84712__11834.1534344517.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 340
            product_id: 169
            sku: ''
            sku_id: null
            price: 44.95
            calculated_price: 44.95
            sale_price: 0
            retail_price: 50
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/169/images/406/3cupchemex5_1024x1024__40463__59678.1534344521.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 341
            product_id: 170
            sku: ''
            sku_id: null
            price: 25
            calculated_price: 25
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/170/images/411/measuringsquares2_1024x1024__07108__95421.1534344522.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 342
            product_id: 171
            sku: ''
            sku_id: null
            price: 70
            calculated_price: 70
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/171/images/414/japanesekettle1_1024x1024_1024x1024__83765__86479.1534344523.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 343
            product_id: 172
            sku: ''
            sku_id: null
            price: 48
            calculated_price: 48
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/172/images/419/thekinfolktablecover_1024x1024__80715__29685.1534344525.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 344
            product_id: 173
            sku: ''
            sku_id: null
            price: 18
            calculated_price: 18
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/173/images/424/measuringspoons1_1024x1024__22102__55079.1534344525.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 345
            product_id: 174
            sku: ''
            sku_id: null
            price: 7.95
            calculated_price: 7.95
            sale_price: 0
            retail_price: 10
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 346
            product_id: 175
            sku: ''
            sku_id: null
            price: 35
            calculated_price: 35
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/175/images/428/oakcheesegrater2_1024x1024__03905__19286.1534344527.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 347
            product_id: 176
            sku: ''
            sku_id: null
            price: 59
            calculated_price: 59
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/176/images/432/milkandcreamer1_1024x1024__69117__81345.1534344528.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 348
            product_id: 177
            sku: ''
            sku_id: null
            price: 7
            calculated_price: 7
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/177/images/434/scrubbrush2_1024x1024_1024x1024__81254__82103.1534344529.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 349
            product_id: 178
            sku: ''
            sku_id: null
            price: 120
            calculated_price: 120
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/178/images/436/tieredbasket_1024x1024__81717__38751.1534344530.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 350
            product_id: 179
            sku: ''
            sku_id: null
            price: 30
            calculated_price: 30
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/179/images/440/CommonGoodLaundrySoap_1024x1024__31999__28799.1534344531.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 351
            product_id: 180
            sku: ''
            sku_id: null
            price: 20
            calculated_price: 20
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/180/images/441/CommonGoodFloorCleaner_grande__73674__83339.1534344531.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 352
            product_id: 181
            sku: ''
            sku_id: null
            price: 15
            calculated_price: 15
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/181/images/442/CommonGoodAllPurposeCleaner_d37aa1e8_e16f_4309_bddd_8fae0d94efc7_1024x1024__40180__66527.1534344531.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 353
            product_id: 182
            sku: ''
            sku_id: null
            price: 15
            calculated_price: 15
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/182/images/443/CommonGoodHandSoap_1024x1024__94874__52907.1534344532.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 354
            product_id: 183
            sku: ''
            sku_id: null
            price: 15
            calculated_price: 15
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/183/images/444/CommonGoodDishSoap_1024x1024__74820__62808.1534344532.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 356
            product_id: 185
            sku: ''
            sku_id: null
            price: 46
            calculated_price: 46
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/185/images/449/utilitybucket1_1024x1024__78563__75042.1534344535.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 498
            inventory_warning_level: 3
            bin_picking_number: ''
            option_values: []
          - id: 357
            product_id: 186
            sku: ''
            sku_id: null
            price: 17
            calculated_price: 17
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/186/images/454/SshapedScrubBrush2_1024x1024__94308__40283.1534344536.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 358
            product_id: 187
            sku: ''
            sku_id: null
            price: 26
            calculated_price: 26
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/187/images/458/featherduster_1024x1024__94858__16221.1534344537.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 359
            product_id: 188
            sku: ''
            sku_id: null
            price: 31.95
            calculated_price: 31.95
            sale_price: 0
            retail_price: 35
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 360
            product_id: 189
            sku: ''
            sku_id: null
            price: 18.95
            calculated_price: 18.95
            sale_price: 0
            retail_price: 22
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/189/images/465/gather_1024x1024__17195__82620.1534344540.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 361
            product_id: 190
            sku: ''
            sku_id: null
            price: 23
            calculated_price: 23
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/190/images/470/kinfolkessentialissue_1024x1024__22507__36871.1534344542.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 362
            product_id: 191
            sku: ''
            sku_id: null
            price: 27.95
            calculated_price: 27.95
            sale_price: 0
            retail_price: 30
            map_price: 0
            weight: 1
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 1
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: 'https://cdn8.bigcommerce.com/s-id30h7ohwf/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.560.850.jpg?c=2'
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 385
            product_id: 193
            sku: ''
            sku_id: null
            price: 10
            calculated_price: 10
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 4
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 4
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
          - id: 386
            product_id: 194
            sku: ''
            sku_id: null
            price: 11
            calculated_price: 11
            sale_price: 0
            retail_price: 0
            map_price: 0
            weight: 3
            width: 0
            height: 0
            depth: 0
            is_free_shipping: false
            fixed_cost_shipping_price: 0
            calculated_weight: 3
            purchasing_disabled: false
            purchasing_disabled_message: ''
            image_url: ''
            cost_price: 0
            upc: ''
            mpn: ''
            gtin: ''
            inventory_level: 0
            inventory_warning_level: 0
            bin_picking_number: ''
            option_values: []
        meta:
          pagination:
            total: 54
            count: 50
            per_page: 50
            current_page: 1
            total_pages: 2
            links:
              next: '?page=2&limit=50'
              current: '?page=1&limit=50'
